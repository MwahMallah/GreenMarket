@model AccountRegisterViewModel

<div class="container text-center register-container">
    <style>
        .register-container {
            width: 300px;
            margin: 50px auto;
            padding: 20px;
            border: 2px solid black;
            border-radius: 10px;
        }
        .register-container label {
            display: block;
            margin-bottom: 8px;
        }
        .register-container input[type="text"],
        .register-container input[type="password"] {
            width: 100%;
            padding: 8px;
            margin-bottom: 15px;
            border: 1px solid black;
            border-radius: 10px;
        }
        .register-container button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: lightgray;
            border: 1px solid black;
            border-radius: 10px;
            cursor: pointer;
        }
        .register-container button:hover{
            background-color: rgb(152, 152, 152);
        }
        .register-container .text-danger {
            margin-bottom: 15px;
        }
    </style>

    <div asp-validation-summary="All" class="text-danger visually-hidden"></div>
    <form asp-action="Register">
        <div>
            <h2>REGISTER</h2>
        </div>
        <div>
            <label asp-for="Username"></label>
            <input type="text" asp-for="Username">
        </div>
        <div>
            <label asp-for="Email"></label>
            <input type="text" asp-for="Email">
        </div>
        <div>
            <label asp-for="Password"></label>
            <input type="password" asp-for="Password">
        </div>
        <div>
            <label asp-for="PasswordConfirm"></label>
            <input type="password" asp-for="PasswordConfirm">
        </div>
        <button type="submit">Register</button>
        <div>
            Already registered?
            <a asp-controller="Account" asp-action="Login">Sign in</a>
        </div>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Display TempData message as a toast notification if it's available
        @if (TempData["message"] != null)
        {
            <text>
                Toastify({
                    text: '@TempData["message"]',
                    duration: 3000,
                    gravity: "top",
                    position: "center",
                    backgroundColor: "red",
                    stopOnFocus: true
                }).showToast();
            </text>
        }

        // Check for validation errors and display them as toast notifications
        const validationErrors = document.querySelectorAll('.text-danger');
        validationErrors.forEach((error) => {
            if (error.textContent.trim() !== '') {
                Toastify({
                    text: error.textContent,
                    duration: 3000,
                    gravity: "top",
                    position: "center",
                    backgroundColor: "red",
                    stopOnFocus: true
                }).showToast();

                /*
                let splitError = error.textContent.split(" ");
                console.log(splitError);
                for (let i = 1; i < splitError.length; i += 4) {
                    console.log(splitError[i]);
                    let inputField = document.querySelector('.' + splitError[i].toLowerCase());
                    if (inputField != null) {
                        inputField.classList.add('border');
                        inputField.classList.add('border-danger');
                    }
                }
                */
            }
        });
    });
</script>
