@model CreateCategoryViewModel

<div class="container">
    <div class="row">
        <h2 class="text-success">Create Category</h2>
    </div>
    <form method="post" asp-action="Create">
        <div class="row gy-2">
            <div class="form-floating">
                <input asp-for="Name" type="text" id="name" 
                       class="form-control validation_required" placeholder="Name">
                <label for="name" class="form-label">Name</label>
                <span asp-validation-for="Name" class="text-danger field-validation-error"></span>
            </div>
            <div class="form-floating">
                <input asp-for="ImgUrl" type="text" id="img" 
                       class="form-control" placeholder="Image url">
                <label for="img" class="form-label">Image Url</label>
                <span asp-validation-for="ImgUrl" class="text-danger field-validation-error"></span>
            </div>
            <div id="category_container">
                <div class="col-12">
                    <h5 class="text-center">Category parent</h5>
                </div>
                <select id="category_select" selector_num="1" name="SelectedCategoryId">
                    <option value="">--Choose Category--</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
            </div>
        </div>
        <div class="row mt-3" id="attribute_container">
            <div class="col-12">
                <h5 class="text-center">Attributes</h5>
            </div>
            <!-- Container for added attributes -->
            <div id="attributes_list"></div>
            <!-- Add attribute button -->
            <div class="col-12 text-center mt-2">
                <button type="button" class="btn btn-primary" id="add_attribute_button">Add Attribute</button>
            </div>
        </div>
        <div class="row mt-2">
            <div>
                <button type="submit" class="btn btn-success submit-btn">Submit</button>
            </div>
        </div>
    </form>
</div>

<script src="/js/validation.js"></script>

<script>
    document.getElementById("add_attribute_button").addEventListener("click", function () {
        const attributesList = document.getElementById("attributes_list");
        const selectedCategoryId = document.getElementById("category_select").value;

        if (!selectedCategoryId) {
            Toastify({
                text: 'Please, select category parent',
                duration: 3000,
                gravity: "top",
                position: "center",
                backgroundColor: "red",
                stopOnFocus: true
            }).showToast();
            return;
        }

        const attributeDiv = document.createElement("div");
        attributeDiv.classList.add("row", "gy-2", "mt-2");

        attributeDiv.innerHTML = `
            <div class="col-md-12 form-floating">
                <input type="text" name="Attributes[${attributesList.children.length}].Name" 
                       class="form-control" placeholder="Attribute Name" required>
                <label>Attribute Name</label>
            </div>
            <input type="hidden" name="Attributes[${attributesList.children.length}].CategoryId" 
                   value="${selectedCategoryId}">
        `;

        attributesList.appendChild(attributeDiv);
    });
    
    document.querySelector("form").addEventListener("submit", async function (e) {
        e.preventDefault();
    
        const formData = new FormData(this);
        const attributes = [];
    
        document.querySelectorAll("#attributes_list .row").forEach((row, index) => {
            const name = row.querySelector("input[type='text']").value;
            const categoryId = row.querySelector("input[type='hidden']").value;
            attributes.push({ Name: name, CategoryId: categoryId });
        });
    
        formData.append("Attributes", JSON.stringify(attributes));
    
        const response = await fetch(this.action, {
            method: "POST",
            body: formData,
        });
    
        if (response.ok) {
            window.location.href = "/Products/Index";
        }
    });
</script>


