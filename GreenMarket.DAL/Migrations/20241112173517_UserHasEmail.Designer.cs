// <auto-generated />
using System;
using GreenMarket.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenMarket.DAL.Migrations
{
    [DbContext(typeof(GreenMarketDbContext))]
    [Migration("20241112173517_UserHasEmail")]
    partial class UserHasEmail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Attributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8c9ef1b-e432-4b00-9a28-bab9b760c419"),
                            CategoryId = new Guid("e3afbf08-0276-43d2-aa46-5f342dfd2192"),
                            Name = "Price/kg"
                        },
                        new
                        {
                            Id = new Guid("bb3252fd-4104-4c2d-b8cf-36a22eb5c716"),
                            CategoryId = new Guid("c3c112bb-3b50-450b-8f8a-da43ac5394f2"),
                            Name = "Price/piece"
                        },
                        new
                        {
                            Id = new Guid("0336287c-9b03-4746-9fa5-cf0702c59cde"),
                            CategoryId = new Guid("c3c112bb-3b50-450b-8f8a-da43ac5394f2"),
                            Name = "Place of origin"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2f01217-7613-4ea0-ab8a-99c7387e07eb"),
                            Name = "Crops"
                        },
                        new
                        {
                            Id = new Guid("86a0bb8f-e8a7-4fa3-9cc0-32d9e3963692"),
                            ImgUrl = "https://www.healthyeating.org/images/default-source/home-0.0/nutrition-topics-2.0/general-nutrition-wellness/2-2-2-3foodgroups_fruits_detailfeature_thumb.jpg?sfvrsn=7abe71fe_4",
                            Name = "Fruits",
                            ParentId = new Guid("a2f01217-7613-4ea0-ab8a-99c7387e07eb")
                        },
                        new
                        {
                            Id = new Guid("54dd6a4d-3a0b-4839-9d84-0ec448e51089"),
                            ImgUrl = "https://cdn.britannica.com/17/196817-159-9E487F15/vegetables.jpg",
                            Name = "Vegetables",
                            ParentId = new Guid("a2f01217-7613-4ea0-ab8a-99c7387e07eb")
                        },
                        new
                        {
                            Id = new Guid("d0985289-73fb-4bb5-b787-0c882aa7c22a"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNIY9W5DxVGXTtV4gR1ZU5qipQsRkpK2pZ3Q&s",
                            Name = "Tomato",
                            ParentId = new Guid("54dd6a4d-3a0b-4839-9d84-0ec448e51089")
                        },
                        new
                        {
                            Id = new Guid("6e01217d-dcc7-4752-b235-56765b2444f4"),
                            ImgUrl = "https://volyne.e-coop.cz/pub/media/catalog/product/cache/5e943ec86580054ec2fda73128d751b9/e/p/ep_2004800329.jpeg",
                            Name = "Tomino",
                            ParentId = new Guid("d0985289-73fb-4bb5-b787-0c882aa7c22a")
                        },
                        new
                        {
                            Id = new Guid("dee4ac56-fe26-49b5-8fe1-6605d75ec796"),
                            ImgUrl = "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSaogrbCqgly8ABLDeqzUKy3Q73FtM_p1XeKseySN5uIjauTVtz",
                            Name = "Roma",
                            ParentId = new Guid("d0985289-73fb-4bb5-b787-0c882aa7c22a")
                        },
                        new
                        {
                            Id = new Guid("e3afbf08-0276-43d2-aa46-5f342dfd2192"),
                            ImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Patates.jpg/1200px-Patates.jpg",
                            Name = "Potato",
                            ParentId = new Guid("54dd6a4d-3a0b-4839-9d84-0ec448e51089")
                        },
                        new
                        {
                            Id = new Guid("1ae0821c-2e0f-4913-b8db-f588ff905440"),
                            ImgUrl = "https://btiscience.org/wp-content/uploads/US-Watermelon-Varieties_600dpi.jpg",
                            Name = "Watermelon",
                            ParentId = new Guid("86a0bb8f-e8a7-4fa3-9cc0-32d9e3963692")
                        },
                        new
                        {
                            Id = new Guid("c3c112bb-3b50-450b-8f8a-da43ac5394f2"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSp05ca_Cf1CqlqghC5DgeX3PNdU-Kup6h1GQ&s",
                            Name = "Avocado",
                            ParentId = new Guid("86a0bb8f-e8a7-4fa3-9cc0-32d9e3963692")
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttribute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8284f93e-44c6-41f8-a80c-48f7fb9e18cf"),
                            AttributeId = new Guid("bb3252fd-4104-4c2d-b8cf-36a22eb5c716"),
                            ProductId = new Guid("126bc378-565a-4ab0-8843-7566b3c543ad"),
                            Value = "25"
                        },
                        new
                        {
                            Id = new Guid("cbb8b1be-c74e-4859-9cc2-4c20cd63b6ab"),
                            AttributeId = new Guid("bb3252fd-4104-4c2d-b8cf-36a22eb5c716"),
                            ProductId = new Guid("83c9ece9-8313-41e8-ae90-ae19e5c5c0cf"),
                            Value = "35"
                        },
                        new
                        {
                            Id = new Guid("1a9c93c6-04ec-4034-bba3-1cbbdda02588"),
                            AttributeId = new Guid("a8c9ef1b-e432-4b00-9a28-bab9b760c419"),
                            ProductId = new Guid("a8ab89ca-fcd0-43b7-9a11-1e0dfe0506ae"),
                            Value = "100"
                        },
                        new
                        {
                            Id = new Guid("c7cf8279-ae84-40c8-836d-74bf88662c4d"),
                            AttributeId = new Guid("a8c9ef1b-e432-4b00-9a28-bab9b760c419"),
                            ProductId = new Guid("c24b432c-ef75-409e-aec4-abb6eef91aa4"),
                            Value = "80"
                        },
                        new
                        {
                            Id = new Guid("0277ab13-ba0e-4e3e-9d7d-12e4f677b057"),
                            AttributeId = new Guid("0336287c-9b03-4746-9fa5-cf0702c59cde"),
                            ProductId = new Guid("126bc378-565a-4ab0-8843-7566b3c543ad"),
                            Value = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("484ea012-0eeb-43cb-ac3e-4538ccc21934"),
                            AttributeId = new Guid("0336287c-9b03-4746-9fa5-cf0702c59cde"),
                            ProductId = new Guid("83c9ece9-8313-41e8-ae90-ae19e5c5c0cf"),
                            Value = "Puerto Rico"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c24b432c-ef75-409e-aec4-abb6eef91aa4"),
                            CategoryId = new Guid("e3afbf08-0276-43d2-aa46-5f342dfd2192"),
                            ImgUrl = "https://seedlefarms.com/wp-content/uploads/2022/01/Orange-Sweet-Potatoe.jpg",
                            Name = "Orange sweet"
                        },
                        new
                        {
                            Id = new Guid("a8ab89ca-fcd0-43b7-9a11-1e0dfe0506ae"),
                            CategoryId = new Guid("e3afbf08-0276-43d2-aa46-5f342dfd2192"),
                            ImgUrl = "https://www.kroger.com/product/images/large/front/0000000004072?banner=harristeeter",
                            Name = "Russet"
                        },
                        new
                        {
                            Id = new Guid("c96e9b4d-ed9c-4771-9068-16d2bc781a3c"),
                            CategoryId = new Guid("6e01217d-dcc7-4752-b235-56765b2444f4"),
                            Name = "Anton's tasty tomino"
                        },
                        new
                        {
                            Id = new Guid("c285dd83-0da6-4452-9728-45d6fc713c55"),
                            CategoryId = new Guid("6e01217d-dcc7-4752-b235-56765b2444f4"),
                            Name = "Ilya's sweet tomino"
                        },
                        new
                        {
                            Id = new Guid("f6ade432-67d9-4bdb-a241-cf1382db0200"),
                            CategoryId = new Guid("1ae0821c-2e0f-4913-b8db-f588ff905440"),
                            Name = "Augusta"
                        },
                        new
                        {
                            Id = new Guid("c03ed4c1-6f90-4e5f-9ac2-8959c9b88e13"),
                            CategoryId = new Guid("1ae0821c-2e0f-4913-b8db-f588ff905440"),
                            Name = "Dragon King"
                        },
                        new
                        {
                            Id = new Guid("a30dedd2-29ba-412a-ad21-87e3a1ec558e"),
                            CategoryId = new Guid("1ae0821c-2e0f-4913-b8db-f588ff905440"),
                            Name = "Happy family"
                        },
                        new
                        {
                            Id = new Guid("126bc378-565a-4ab0-8843-7566b3c543ad"),
                            CategoryId = new Guid("c3c112bb-3b50-450b-8f8a-da43ac5394f2"),
                            ImgUrl = "https://www.tomorrowsharvest.com/store/pub/media/catalog/product/cache/49e19764d17a195b05fde2ec48914513/2/2/2210_fuerte_avocado_fruit-full.jpg",
                            Name = "Fuerte"
                        },
                        new
                        {
                            Id = new Guid("83c9ece9-8313-41e8-ae90-ae19e5c5c0cf"),
                            CategoryId = new Guid("c3c112bb-3b50-450b-8f8a-da43ac5394f2"),
                            ImgUrl = "https://www.producemarketguide.com/media/user_v1oz1Yz27j/584/gwen-avocado_variety-page.png",
                            Name = "Gwen"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("62074683-bbec-4517-886d-b3f4d1309220"),
                            Email = "admin@admin.com",
                            ImgUrl = "",
                            Name = "admin",
                            Password = "admin",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("68302f22-48b3-43bd-8d24-e437a7ecefa2"),
                            Email = "maksim@mail.com",
                            ImgUrl = "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_3x4.jpg",
                            Name = "Maksim",
                            Password = "123",
                            Role = 1,
                            Username = "MaksimDubr"
                        },
                        new
                        {
                            Id = new Guid("534ad097-4625-48e8-b282-318c28fc3659"),
                            Email = "anton@mail.com",
                            ImgUrl = "https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg",
                            Name = "Anton",
                            Password = "123456",
                            Role = 1,
                            Username = "AntonHavl"
                        },
                        new
                        {
                            Id = new Guid("e4ad09a4-2e33-4b42-9a17-7dc56b476f85"),
                            Email = "nastya@mail.com",
                            ImgUrl = "https://cdn.pixabay.com/photo/2021/09/20/09/17/dog-6640280_1280.jpg",
                            Name = "Nastya",
                            Password = "1234",
                            Role = 1,
                            Username = "NastyaMiro"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.AttributeEntity", "Attribute")
                        .WithMany("Products")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Navigation("Attributes");
                });
#pragma warning restore 612, 618
        }
    }
}
