// <auto-generated />
using System;
using GreenMarket.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenMarket.DAL.Migrations
{
    [DbContext(typeof(GreenMarketDbContext))]
    [Migration("20241109203125_AddedMoreCategoriesToTomatoes")]
    partial class AddedMoreCategoriesToTomatoes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Attributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("922ac2cd-4613-4951-825f-ed99bbbcda19"),
                            CategoryId = new Guid("fc436980-0241-4503-b101-10f9d28da52f"),
                            Name = "Price/kg"
                        },
                        new
                        {
                            Id = new Guid("45a0d587-bdef-4f98-b8dc-2be45ab57848"),
                            CategoryId = new Guid("6af91c91-e410-41f8-9c7a-33560df06ecb"),
                            Name = "Price/piece"
                        },
                        new
                        {
                            Id = new Guid("47ad562b-9306-423b-bca7-1c0edc27d0db"),
                            CategoryId = new Guid("6af91c91-e410-41f8-9c7a-33560df06ecb"),
                            Name = "Place of origin"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e672d70f-0e84-4c3e-9c46-1bcc6431603c"),
                            ImgUrl = "https://www.healthyeating.org/images/default-source/home-0.0/nutrition-topics-2.0/general-nutrition-wellness/2-2-2-3foodgroups_fruits_detailfeature_thumb.jpg?sfvrsn=7abe71fe_4",
                            Name = "Fruits"
                        },
                        new
                        {
                            Id = new Guid("8dbe0890-cbf5-432f-9b9f-0e96429ca68c"),
                            ImgUrl = "https://cdn.britannica.com/17/196817-159-9E487F15/vegetables.jpg",
                            Name = "Vegetables"
                        },
                        new
                        {
                            Id = new Guid("86bad8fc-00a2-4ad0-b431-862e66c2334f"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNIY9W5DxVGXTtV4gR1ZU5qipQsRkpK2pZ3Q&s",
                            Name = "Tomato",
                            ParentId = new Guid("8dbe0890-cbf5-432f-9b9f-0e96429ca68c")
                        },
                        new
                        {
                            Id = new Guid("a499d06e-b7e7-4bcc-93a8-08f50b74dc17"),
                            ImgUrl = "https://volyne.e-coop.cz/pub/media/catalog/product/cache/5e943ec86580054ec2fda73128d751b9/e/p/ep_2004800329.jpeg",
                            Name = "Tomino",
                            ParentId = new Guid("86bad8fc-00a2-4ad0-b431-862e66c2334f")
                        },
                        new
                        {
                            Id = new Guid("e108b3b0-1ab1-4516-987a-8eec5b6b92d4"),
                            ImgUrl = "https://volyne.e-coop.cz/pub/media/catalog/product/cache/5e943ec86580054ec2fda73128d751b9/e/p/ep_2004800329.jpeg",
                            Name = "Roma",
                            ParentId = new Guid("86bad8fc-00a2-4ad0-b431-862e66c2334f")
                        },
                        new
                        {
                            Id = new Guid("fc436980-0241-4503-b101-10f9d28da52f"),
                            ImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Patates.jpg/1200px-Patates.jpg",
                            Name = "Potato",
                            ParentId = new Guid("8dbe0890-cbf5-432f-9b9f-0e96429ca68c")
                        },
                        new
                        {
                            Id = new Guid("694d7e99-5509-477f-b5e3-46b356241166"),
                            ImgUrl = "https://btiscience.org/wp-content/uploads/US-Watermelon-Varieties_600dpi.jpg",
                            Name = "Watermelon",
                            ParentId = new Guid("e672d70f-0e84-4c3e-9c46-1bcc6431603c")
                        },
                        new
                        {
                            Id = new Guid("6af91c91-e410-41f8-9c7a-33560df06ecb"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSp05ca_Cf1CqlqghC5DgeX3PNdU-Kup6h1GQ&s",
                            Name = "Avocado",
                            ParentId = new Guid("e672d70f-0e84-4c3e-9c46-1bcc6431603c")
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttribute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8afcf32d-c326-4cf9-b822-e1c01b115223"),
                            AttributeId = new Guid("45a0d587-bdef-4f98-b8dc-2be45ab57848"),
                            ProductId = new Guid("181fa3d0-085d-443c-97e2-9e3ccf6656a9"),
                            Value = "25"
                        },
                        new
                        {
                            Id = new Guid("efbc5430-a15c-4e95-a04d-873cb6d19ba0"),
                            AttributeId = new Guid("45a0d587-bdef-4f98-b8dc-2be45ab57848"),
                            ProductId = new Guid("36265fa7-710e-48a7-9f73-a34c84c48024"),
                            Value = "35"
                        },
                        new
                        {
                            Id = new Guid("279d202a-e489-4b6f-97f5-bd1e9370b052"),
                            AttributeId = new Guid("922ac2cd-4613-4951-825f-ed99bbbcda19"),
                            ProductId = new Guid("6c34cf07-1395-4c95-9cea-13f0be6691b1"),
                            Value = "100"
                        },
                        new
                        {
                            Id = new Guid("da5773e7-5112-4648-9c65-3369d9a72672"),
                            AttributeId = new Guid("922ac2cd-4613-4951-825f-ed99bbbcda19"),
                            ProductId = new Guid("081e78e5-deab-4164-864d-8340d7ee2baf"),
                            Value = "80"
                        },
                        new
                        {
                            Id = new Guid("d82e1ffa-e9bf-411e-9b03-ece862de73a0"),
                            AttributeId = new Guid("47ad562b-9306-423b-bca7-1c0edc27d0db"),
                            ProductId = new Guid("181fa3d0-085d-443c-97e2-9e3ccf6656a9"),
                            Value = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("804f887c-6522-4ca2-87a9-5d5790b40e8b"),
                            AttributeId = new Guid("47ad562b-9306-423b-bca7-1c0edc27d0db"),
                            ProductId = new Guid("36265fa7-710e-48a7-9f73-a34c84c48024"),
                            Value = "Puerto Rico"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("081e78e5-deab-4164-864d-8340d7ee2baf"),
                            CategoryId = new Guid("fc436980-0241-4503-b101-10f9d28da52f"),
                            ImgUrl = "https://seedlefarms.com/wp-content/uploads/2022/01/Orange-Sweet-Potatoe.jpg",
                            Name = "Orange sweet"
                        },
                        new
                        {
                            Id = new Guid("6c34cf07-1395-4c95-9cea-13f0be6691b1"),
                            CategoryId = new Guid("fc436980-0241-4503-b101-10f9d28da52f"),
                            ImgUrl = "https://www.kroger.com/product/images/large/front/0000000004072?banner=harristeeter",
                            Name = "Russet"
                        },
                        new
                        {
                            Id = new Guid("ca7cd240-5ea4-4cb8-8887-83d85f17ee11"),
                            CategoryId = new Guid("a499d06e-b7e7-4bcc-93a8-08f50b74dc17"),
                            Name = "Anton's tasty tomino"
                        },
                        new
                        {
                            Id = new Guid("968c8134-a4ff-41a3-b2ef-71147fdaa9f6"),
                            CategoryId = new Guid("a499d06e-b7e7-4bcc-93a8-08f50b74dc17"),
                            Name = "Ilya's sweet tomino"
                        },
                        new
                        {
                            Id = new Guid("0dc27834-39d8-4dd8-9bb8-210d42e86a50"),
                            CategoryId = new Guid("694d7e99-5509-477f-b5e3-46b356241166"),
                            Name = "Augusta"
                        },
                        new
                        {
                            Id = new Guid("a8839e57-93c9-4963-973d-2f5228d14de4"),
                            CategoryId = new Guid("694d7e99-5509-477f-b5e3-46b356241166"),
                            Name = "Dragon King"
                        },
                        new
                        {
                            Id = new Guid("8020dcc9-66cf-4d74-b0d9-fe4964fac820"),
                            CategoryId = new Guid("694d7e99-5509-477f-b5e3-46b356241166"),
                            Name = "Happy family"
                        },
                        new
                        {
                            Id = new Guid("181fa3d0-085d-443c-97e2-9e3ccf6656a9"),
                            CategoryId = new Guid("6af91c91-e410-41f8-9c7a-33560df06ecb"),
                            ImgUrl = "https://www.tomorrowsharvest.com/store/pub/media/catalog/product/cache/49e19764d17a195b05fde2ec48914513/2/2/2210_fuerte_avocado_fruit-full.jpg",
                            Name = "Fuerte"
                        },
                        new
                        {
                            Id = new Guid("36265fa7-710e-48a7-9f73-a34c84c48024"),
                            CategoryId = new Guid("6af91c91-e410-41f8-9c7a-33560df06ecb"),
                            ImgUrl = "https://www.producemarketguide.com/media/user_v1oz1Yz27j/584/gwen-avocado_variety-page.png",
                            Name = "Gwen"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95b34bbb-81aa-46bd-93cf-f03f329f9d4b"),
                            ImgUrl = "",
                            Name = "admin",
                            Password = "admin",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("1728c34d-2c29-48d9-98a2-573ef6c9bf6a"),
                            ImgUrl = "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_3x4.jpg",
                            Name = "Maksim",
                            Password = "123",
                            Role = 1,
                            Username = "MaksimDubr"
                        },
                        new
                        {
                            Id = new Guid("438ffd2d-ec79-44ed-8431-ab7c4de1a044"),
                            ImgUrl = "https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg",
                            Name = "Anton",
                            Password = "123456",
                            Role = 1,
                            Username = "AntonHavl"
                        },
                        new
                        {
                            Id = new Guid("0e12888f-ca31-43cc-96f3-ff4a061eabf3"),
                            ImgUrl = "https://cdn.pixabay.com/photo/2021/09/20/09/17/dog-6640280_1280.jpg",
                            Name = "Nastya",
                            Password = "1234",
                            Role = 1,
                            Username = "NastyaMiro"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.AttributeEntity", "Attribute")
                        .WithMany("Products")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Navigation("Attributes");
                });
#pragma warning restore 612, 618
        }
    }
}
