// <auto-generated />
using System;
using GreenMarket.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenMarket.DAL.Migrations
{
    [DbContext(typeof(GreenMarketDbContext))]
    [Migration("20241120204357_AddedProductSalesType")]
    partial class AddedProductSalesType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Attributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b11c52c0-de12-41f2-a4e7-6359c1153e1d"),
                            CategoryId = new Guid("d436a2bc-4c8f-47b3-826a-82c1075b1c68"),
                            Name = "Price/kg"
                        },
                        new
                        {
                            Id = new Guid("d0922abc-25f0-4212-8826-18e09d836031"),
                            CategoryId = new Guid("f6f7d01f-c3eb-4c8f-8fbc-92410a7a9411"),
                            Name = "Price/piece"
                        },
                        new
                        {
                            Id = new Guid("8c7c863a-698a-4fde-88ef-694bdc96888f"),
                            CategoryId = new Guid("f6f7d01f-c3eb-4c8f-8fbc-92410a7a9411"),
                            Name = "Place of origin"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d677593d-9849-4e3d-9d84-6ff87516e62c"),
                            Name = "Crops",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("47a2e167-9b1a-4db4-97bc-091eb469b215"),
                            ImgUrl = "https://www.healthyeating.org/images/default-source/home-0.0/nutrition-topics-2.0/general-nutrition-wellness/2-2-2-3foodgroups_fruits_detailfeature_thumb.jpg?sfvrsn=7abe71fe_4",
                            Name = "Fruits",
                            ParentId = new Guid("d677593d-9849-4e3d-9d84-6ff87516e62c"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("34d453ec-eb59-4bba-a2fb-cc6cdd70b1bb"),
                            ImgUrl = "https://cdn.britannica.com/17/196817-159-9E487F15/vegetables.jpg",
                            Name = "Vegetables",
                            ParentId = new Guid("d677593d-9849-4e3d-9d84-6ff87516e62c"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e6ad1d69-3c3c-4c03-aee8-06edf023a4db"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNIY9W5DxVGXTtV4gR1ZU5qipQsRkpK2pZ3Q&s",
                            Name = "Tomato",
                            ParentId = new Guid("34d453ec-eb59-4bba-a2fb-cc6cdd70b1bb"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("efe159cf-270e-49c0-958a-690cdbf7378e"),
                            ImgUrl = "https://volyne.e-coop.cz/pub/media/catalog/product/cache/5e943ec86580054ec2fda73128d751b9/e/p/ep_2004800329.jpeg",
                            Name = "Tomino",
                            ParentId = new Guid("e6ad1d69-3c3c-4c03-aee8-06edf023a4db"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("5285b2ec-3c92-4642-a17a-b899d8a49ed7"),
                            ImgUrl = "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSaogrbCqgly8ABLDeqzUKy3Q73FtM_p1XeKseySN5uIjauTVtz",
                            Name = "Roma",
                            ParentId = new Guid("e6ad1d69-3c3c-4c03-aee8-06edf023a4db"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d436a2bc-4c8f-47b3-826a-82c1075b1c68"),
                            ImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Patates.jpg/1200px-Patates.jpg",
                            Name = "Potato",
                            ParentId = new Guid("34d453ec-eb59-4bba-a2fb-cc6cdd70b1bb"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("10ce5cb5-7daa-4837-af3a-53fec7fac087"),
                            ImgUrl = "https://btiscience.org/wp-content/uploads/US-Watermelon-Varieties_600dpi.jpg",
                            Name = "Watermelon",
                            ParentId = new Guid("47a2e167-9b1a-4db4-97bc-091eb469b215"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("f6f7d01f-c3eb-4c8f-8fbc-92410a7a9411"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSp05ca_Cf1CqlqghC5DgeX3PNdU-Kup6h1GQ&s",
                            Name = "Avocado",
                            ParentId = new Guid("47a2e167-9b1a-4db4-97bc-091eb469b215"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.HarvestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Harvests");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.OrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttribute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce75b7c5-d24a-4651-a15d-c27f32e4c072"),
                            AttributeId = new Guid("d0922abc-25f0-4212-8826-18e09d836031"),
                            ProductId = new Guid("f856760d-adf9-4b4b-92e1-c1ae3bef024a"),
                            Value = "25"
                        },
                        new
                        {
                            Id = new Guid("3f6d2d52-719a-4a74-8c52-49c6af7e4ecd"),
                            AttributeId = new Guid("d0922abc-25f0-4212-8826-18e09d836031"),
                            ProductId = new Guid("8871a182-6d18-4771-b7c7-2e51a578dd63"),
                            Value = "35"
                        },
                        new
                        {
                            Id = new Guid("cb0e5e09-c144-41ad-b0ce-c5b8737ebc62"),
                            AttributeId = new Guid("b11c52c0-de12-41f2-a4e7-6359c1153e1d"),
                            ProductId = new Guid("6f0c16b1-bd61-48dc-8a84-3ee880b92056"),
                            Value = "100"
                        },
                        new
                        {
                            Id = new Guid("1859f1d1-567c-4295-8ed8-01ed24d017c1"),
                            AttributeId = new Guid("b11c52c0-de12-41f2-a4e7-6359c1153e1d"),
                            ProductId = new Guid("cee94256-69c6-4807-8fec-390f93b576bd"),
                            Value = "80"
                        },
                        new
                        {
                            Id = new Guid("1d333eda-d587-4b30-81db-fe38648775ca"),
                            AttributeId = new Guid("8c7c863a-698a-4fde-88ef-694bdc96888f"),
                            ProductId = new Guid("f856760d-adf9-4b4b-92e1-c1ae3bef024a"),
                            Value = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("937631da-649f-4b71-8504-0dc661a71b9c"),
                            AttributeId = new Guid("8c7c863a-698a-4fde-88ef-694bdc96888f"),
                            ProductId = new Guid("8871a182-6d18-4771-b7c7-2e51a578dd63"),
                            Value = "Puerto Rico"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cee94256-69c6-4807-8fec-390f93b576bd"),
                            CategoryId = new Guid("d436a2bc-4c8f-47b3-826a-82c1075b1c68"),
                            CreatorId = new Guid("fc1f8b3b-fc48-40f1-a497-81b67db2d8ee"),
                            ImgUrl = "https://seedlefarms.com/wp-content/uploads/2022/01/Orange-Sweet-Potatoe.jpg",
                            Name = "Orange sweet",
                            Stock = 3,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("6f0c16b1-bd61-48dc-8a84-3ee880b92056"),
                            CategoryId = new Guid("d436a2bc-4c8f-47b3-826a-82c1075b1c68"),
                            CreatorId = new Guid("fc1f8b3b-fc48-40f1-a497-81b67db2d8ee"),
                            ImgUrl = "https://www.kroger.com/product/images/large/front/0000000004072?banner=harristeeter",
                            Name = "Russet",
                            Stock = 4,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("5a4a79d8-ebef-4dff-86b3-c44cbad12963"),
                            CategoryId = new Guid("efe159cf-270e-49c0-958a-690cdbf7378e"),
                            CreatorId = new Guid("b74f93cd-3b63-4c64-b0e9-8d893f50a5c8"),
                            Description = "A sweet and smooth tomino, offering a unique balance of sweetness and creaminess.",
                            Name = "Anton's tasty tomino",
                            Stock = 5,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("fb16fe40-65de-447a-9766-708884d0d11a"),
                            CategoryId = new Guid("efe159cf-270e-49c0-958a-690cdbf7378e"),
                            CreatorId = new Guid("70fba05c-7346-4e55-bff0-0789f89421cc"),
                            Description = "A delicious, creamy tomino with a rich, savory flavor. Perfect for any tomato lover!",
                            Name = "Ilya's sweet tomino",
                            Stock = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("9f5371e3-0e92-4555-b06f-f787db199ef3"),
                            CategoryId = new Guid("10ce5cb5-7daa-4837-af3a-53fec7fac087"),
                            CreatorId = new Guid("b74f93cd-3b63-4c64-b0e9-8d893f50a5c8"),
                            Name = "Augusta",
                            Stock = 2,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("ef900f1d-5a09-4bd4-8ace-5516cba9e014"),
                            CategoryId = new Guid("10ce5cb5-7daa-4837-af3a-53fec7fac087"),
                            CreatorId = new Guid("b74f93cd-3b63-4c64-b0e9-8d893f50a5c8"),
                            Name = "Dragon King",
                            Stock = 3,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("c77e0211-9d64-4e1d-b743-07b5b18a4011"),
                            CategoryId = new Guid("10ce5cb5-7daa-4837-af3a-53fec7fac087"),
                            CreatorId = new Guid("b74f93cd-3b63-4c64-b0e9-8d893f50a5c8"),
                            Name = "Happy family",
                            Stock = 10,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("f856760d-adf9-4b4b-92e1-c1ae3bef024a"),
                            CategoryId = new Guid("f6f7d01f-c3eb-4c8f-8fbc-92410a7a9411"),
                            CreatorId = new Guid("fc1f8b3b-fc48-40f1-a497-81b67db2d8ee"),
                            Description = "Fuerte avocados are medium to large with smooth, thick skin and a mild, creamy flavor. Perfect for slicing and enjoying in salads, or on toast.",
                            ImgUrl = "https://www.tomorrowsharvest.com/store/pub/media/catalog/product/cache/49e19764d17a195b05fde2ec48914513/2/2/2210_fuerte_avocado_fruit-full.jpg",
                            Name = "Fuerte",
                            Stock = 11,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("8871a182-6d18-4771-b7c7-2e51a578dd63"),
                            CategoryId = new Guid("f6f7d01f-c3eb-4c8f-8fbc-92410a7a9411"),
                            CreatorId = new Guid("f45cbb80-a86f-459b-a9ff-fca48bfdfc29"),
                            Description = "Gwen avocados are a variety known for their creamy texture and rich, nutty flavor. They are slightly smaller than Has avocados and have a smoother texture.",
                            ImgUrl = "https://www.producemarketguide.com/media/user_v1oz1Yz27j/584/gwen-avocado_variety-page.png",
                            Name = "Gwen",
                            Stock = 5,
                            Type = 0
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9bb6a959-39b9-425b-b4da-949769588fd2"),
                            Email = "admin@admin.com",
                            ImgUrl = "",
                            Name = "admin",
                            Password = "admin",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("fc1f8b3b-fc48-40f1-a497-81b67db2d8ee"),
                            Email = "maksim@mail.com",
                            ImgUrl = "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_3x4.jpg",
                            Name = "Maksim",
                            Password = "123",
                            Role = 1,
                            Username = "MaksimDubr"
                        },
                        new
                        {
                            Id = new Guid("b74f93cd-3b63-4c64-b0e9-8d893f50a5c8"),
                            Email = "anton@mail.com",
                            ImgUrl = "https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg",
                            Name = "Anton",
                            Password = "123456",
                            Role = 1,
                            Username = "AntonHavl"
                        },
                        new
                        {
                            Id = new Guid("f45cbb80-a86f-459b-a9ff-fca48bfdfc29"),
                            Email = "nastya@mail.com",
                            ImgUrl = "https://cdn.pixabay.com/photo/2021/09/20/09/17/dog-6640280_1280.jpg",
                            Name = "Nastya",
                            Password = "1234",
                            Role = 1,
                            Username = "NastyaMiro"
                        },
                        new
                        {
                            Id = new Guid("70fba05c-7346-4e55-bff0-0789f89421cc"),
                            Email = "ilya@mail.com",
                            ImgUrl = "https://cdn.pixabay.com/photo/2021/09/20/09/17/dog-6640280_1280.jpg",
                            Name = "Ilya",
                            Password = "123456",
                            Role = 1,
                            Username = "IlyaVeryBad"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.HarvestEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Harvests")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.OrderEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.UserEntity", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.AttributeEntity", "Attribute")
                        .WithMany("Products")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.UserEntity", "Creator")
                        .WithMany("CreatedProducts")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Harvests");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Navigation("CreatedProducts");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
