// <auto-generated />
using System;
using GreenMarket.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenMarket.DAL.Migrations
{
    [DbContext(typeof(GreenMarketDbContext))]
    [Migration("20241115181420_AddedFarmerRole")]
    partial class AddedFarmerRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Attributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("15934a20-50de-4687-8e5e-795d3bdca53f"),
                            CategoryId = new Guid("1bf91e74-593b-493a-8510-e2fd83076338"),
                            Name = "Price/kg"
                        },
                        new
                        {
                            Id = new Guid("e1514f97-d1cc-4448-a056-d8f91a4a2dfd"),
                            CategoryId = new Guid("ba17940e-faf2-4478-90ef-93069199c134"),
                            Name = "Price/piece"
                        },
                        new
                        {
                            Id = new Guid("4f5ef285-2ea0-42ba-bfce-8665a68129f1"),
                            CategoryId = new Guid("ba17940e-faf2-4478-90ef-93069199c134"),
                            Name = "Place of origin"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c97f2c98-fdea-43ea-a7fc-e1cd9a07b3d0"),
                            Name = "Crops"
                        },
                        new
                        {
                            Id = new Guid("b0bfa7f4-bf7f-4e1b-9965-f39ff5cc74b2"),
                            ImgUrl = "https://www.healthyeating.org/images/default-source/home-0.0/nutrition-topics-2.0/general-nutrition-wellness/2-2-2-3foodgroups_fruits_detailfeature_thumb.jpg?sfvrsn=7abe71fe_4",
                            Name = "Fruits",
                            ParentId = new Guid("c97f2c98-fdea-43ea-a7fc-e1cd9a07b3d0")
                        },
                        new
                        {
                            Id = new Guid("0dc0482d-3698-4ef9-8ea1-9a0d47980cd6"),
                            ImgUrl = "https://cdn.britannica.com/17/196817-159-9E487F15/vegetables.jpg",
                            Name = "Vegetables",
                            ParentId = new Guid("c97f2c98-fdea-43ea-a7fc-e1cd9a07b3d0")
                        },
                        new
                        {
                            Id = new Guid("63c32b8a-e3bb-417a-908c-7bfd68ef79ca"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNIY9W5DxVGXTtV4gR1ZU5qipQsRkpK2pZ3Q&s",
                            Name = "Tomato",
                            ParentId = new Guid("0dc0482d-3698-4ef9-8ea1-9a0d47980cd6")
                        },
                        new
                        {
                            Id = new Guid("1c0bb4fe-55ac-4ad5-a743-af5a49645400"),
                            ImgUrl = "https://volyne.e-coop.cz/pub/media/catalog/product/cache/5e943ec86580054ec2fda73128d751b9/e/p/ep_2004800329.jpeg",
                            Name = "Tomino",
                            ParentId = new Guid("63c32b8a-e3bb-417a-908c-7bfd68ef79ca")
                        },
                        new
                        {
                            Id = new Guid("5a93dfb9-ce8c-4762-85f3-f80311bd623a"),
                            ImgUrl = "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSaogrbCqgly8ABLDeqzUKy3Q73FtM_p1XeKseySN5uIjauTVtz",
                            Name = "Roma",
                            ParentId = new Guid("63c32b8a-e3bb-417a-908c-7bfd68ef79ca")
                        },
                        new
                        {
                            Id = new Guid("1bf91e74-593b-493a-8510-e2fd83076338"),
                            ImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Patates.jpg/1200px-Patates.jpg",
                            Name = "Potato",
                            ParentId = new Guid("0dc0482d-3698-4ef9-8ea1-9a0d47980cd6")
                        },
                        new
                        {
                            Id = new Guid("05b93b19-15e2-4c7d-99a0-a07aa978c043"),
                            ImgUrl = "https://btiscience.org/wp-content/uploads/US-Watermelon-Varieties_600dpi.jpg",
                            Name = "Watermelon",
                            ParentId = new Guid("b0bfa7f4-bf7f-4e1b-9965-f39ff5cc74b2")
                        },
                        new
                        {
                            Id = new Guid("ba17940e-faf2-4478-90ef-93069199c134"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSp05ca_Cf1CqlqghC5DgeX3PNdU-Kup6h1GQ&s",
                            Name = "Avocado",
                            ParentId = new Guid("b0bfa7f4-bf7f-4e1b-9965-f39ff5cc74b2")
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttribute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("485435d2-395d-4de4-b6c3-0659998c64e7"),
                            AttributeId = new Guid("e1514f97-d1cc-4448-a056-d8f91a4a2dfd"),
                            ProductId = new Guid("b02d4baa-d725-47aa-8085-4ed196b7b890"),
                            Value = "25"
                        },
                        new
                        {
                            Id = new Guid("2a181756-7faf-437b-9178-23b5617b8ac7"),
                            AttributeId = new Guid("e1514f97-d1cc-4448-a056-d8f91a4a2dfd"),
                            ProductId = new Guid("c8b673b5-d193-45c0-9ef0-15273c96e198"),
                            Value = "35"
                        },
                        new
                        {
                            Id = new Guid("5be18a08-29ad-4610-b1fc-7a76ae6e9836"),
                            AttributeId = new Guid("15934a20-50de-4687-8e5e-795d3bdca53f"),
                            ProductId = new Guid("cd20730f-fb32-401f-90f7-5630c240b42a"),
                            Value = "100"
                        },
                        new
                        {
                            Id = new Guid("dd518cb7-747b-4cfb-a702-905519afe4bf"),
                            AttributeId = new Guid("15934a20-50de-4687-8e5e-795d3bdca53f"),
                            ProductId = new Guid("6c652ade-e64b-49b7-99f3-6caee45738b4"),
                            Value = "80"
                        },
                        new
                        {
                            Id = new Guid("462d8043-e9a0-468e-8ded-0daaf065d388"),
                            AttributeId = new Guid("4f5ef285-2ea0-42ba-bfce-8665a68129f1"),
                            ProductId = new Guid("b02d4baa-d725-47aa-8085-4ed196b7b890"),
                            Value = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("a34587fe-b7b1-4af1-95f0-b9ee6f28ca8d"),
                            AttributeId = new Guid("4f5ef285-2ea0-42ba-bfce-8665a68129f1"),
                            ProductId = new Guid("c8b673b5-d193-45c0-9ef0-15273c96e198"),
                            Value = "Puerto Rico"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c652ade-e64b-49b7-99f3-6caee45738b4"),
                            CategoryId = new Guid("1bf91e74-593b-493a-8510-e2fd83076338"),
                            ImgUrl = "https://seedlefarms.com/wp-content/uploads/2022/01/Orange-Sweet-Potatoe.jpg",
                            Name = "Orange sweet"
                        },
                        new
                        {
                            Id = new Guid("cd20730f-fb32-401f-90f7-5630c240b42a"),
                            CategoryId = new Guid("1bf91e74-593b-493a-8510-e2fd83076338"),
                            ImgUrl = "https://www.kroger.com/product/images/large/front/0000000004072?banner=harristeeter",
                            Name = "Russet"
                        },
                        new
                        {
                            Id = new Guid("a846a308-6197-4b58-9601-1f235a8c2d46"),
                            CategoryId = new Guid("1c0bb4fe-55ac-4ad5-a743-af5a49645400"),
                            Description = "A sweet and smooth tomino, offering a unique balance of sweetness and creaminess.",
                            Name = "Anton's tasty tomino"
                        },
                        new
                        {
                            Id = new Guid("fbdf79bb-97cf-4634-aff0-85abe7e9cd83"),
                            CategoryId = new Guid("1c0bb4fe-55ac-4ad5-a743-af5a49645400"),
                            Description = "A delicious, creamy tomino with a rich, savory flavor. Perfect for any tomato lover!",
                            Name = "Ilya's sweet tomino"
                        },
                        new
                        {
                            Id = new Guid("d968e190-7fef-43cc-a8cd-6cd4b2c527d8"),
                            CategoryId = new Guid("05b93b19-15e2-4c7d-99a0-a07aa978c043"),
                            Name = "Augusta"
                        },
                        new
                        {
                            Id = new Guid("1abc58dc-0062-4830-942d-692cb66e01b8"),
                            CategoryId = new Guid("05b93b19-15e2-4c7d-99a0-a07aa978c043"),
                            Name = "Dragon King"
                        },
                        new
                        {
                            Id = new Guid("96107e57-6644-4efb-ad98-c245298c52cf"),
                            CategoryId = new Guid("05b93b19-15e2-4c7d-99a0-a07aa978c043"),
                            Name = "Happy family"
                        },
                        new
                        {
                            Id = new Guid("b02d4baa-d725-47aa-8085-4ed196b7b890"),
                            CategoryId = new Guid("ba17940e-faf2-4478-90ef-93069199c134"),
                            Description = "Fuerte avocados are medium to large with smooth, thick skin and a mild, creamy flavor. Perfect for slicing and enjoying in salads, or on toast.",
                            ImgUrl = "https://www.tomorrowsharvest.com/store/pub/media/catalog/product/cache/49e19764d17a195b05fde2ec48914513/2/2/2210_fuerte_avocado_fruit-full.jpg",
                            Name = "Fuerte"
                        },
                        new
                        {
                            Id = new Guid("c8b673b5-d193-45c0-9ef0-15273c96e198"),
                            CategoryId = new Guid("ba17940e-faf2-4478-90ef-93069199c134"),
                            Description = "Gwen avocados are a variety known for their creamy texture and rich, nutty flavor. They are slightly smaller than Has avocados and have a smoother texture.",
                            ImgUrl = "https://www.producemarketguide.com/media/user_v1oz1Yz27j/584/gwen-avocado_variety-page.png",
                            Name = "Gwen"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("91c99720-f88f-4159-b6b3-4e1033c535e9"),
                            Email = "admin@admin.com",
                            ImgUrl = "",
                            Name = "admin",
                            Password = "admin",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("68ef8e8b-36f8-44dc-816a-296234b27dc3"),
                            Email = "maksim@mail.com",
                            ImgUrl = "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_3x4.jpg",
                            Name = "Maksim",
                            Password = "123",
                            Role = 1,
                            Username = "MaksimDubr"
                        },
                        new
                        {
                            Id = new Guid("a7cfff66-39c4-4afe-ae93-75be380c23ae"),
                            Email = "anton@mail.com",
                            ImgUrl = "https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg",
                            Name = "Anton",
                            Password = "123456",
                            Role = 1,
                            Username = "AntonHavl"
                        },
                        new
                        {
                            Id = new Guid("ea6216a2-1b7e-4413-9c25-121c75318477"),
                            Email = "nastya@mail.com",
                            ImgUrl = "https://cdn.pixabay.com/photo/2021/09/20/09/17/dog-6640280_1280.jpg",
                            Name = "Nastya",
                            Password = "1234",
                            Role = 1,
                            Username = "NastyaMiro"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserOrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOrderEntity");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.AttributeEntity", "Attribute")
                        .WithMany("Products")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserOrderEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Customers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.UserEntity", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
