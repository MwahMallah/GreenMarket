// <auto-generated />
using System;
using GreenMarket.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenMarket.DAL.Migrations
{
    [DbContext(typeof(GreenMarketDbContext))]
    [Migration("20241113124539_OrdersHaveRating")]
    partial class OrdersHaveRating
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Attributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ea7c823-b57c-475e-9530-45c8e4032692"),
                            CategoryId = new Guid("c5c1f602-dc98-4c3b-aec9-1f9f764adc46"),
                            Name = "Price/kg"
                        },
                        new
                        {
                            Id = new Guid("9fd17449-bda7-433b-8005-19c8b597f287"),
                            CategoryId = new Guid("cbb3ea06-aa61-4d87-9864-4442069d5efc"),
                            Name = "Price/piece"
                        },
                        new
                        {
                            Id = new Guid("4be39cfc-4317-4091-961a-cc314d54cecb"),
                            CategoryId = new Guid("cbb3ea06-aa61-4d87-9864-4442069d5efc"),
                            Name = "Place of origin"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9183ee53-5efe-4851-a503-02e0132264c8"),
                            Name = "Crops"
                        },
                        new
                        {
                            Id = new Guid("2e22dd47-bf63-4464-aa0e-1b29798831c5"),
                            ImgUrl = "https://www.healthyeating.org/images/default-source/home-0.0/nutrition-topics-2.0/general-nutrition-wellness/2-2-2-3foodgroups_fruits_detailfeature_thumb.jpg?sfvrsn=7abe71fe_4",
                            Name = "Fruits",
                            ParentId = new Guid("9183ee53-5efe-4851-a503-02e0132264c8")
                        },
                        new
                        {
                            Id = new Guid("777060b8-90ac-4a95-ac86-07bd43814878"),
                            ImgUrl = "https://cdn.britannica.com/17/196817-159-9E487F15/vegetables.jpg",
                            Name = "Vegetables",
                            ParentId = new Guid("9183ee53-5efe-4851-a503-02e0132264c8")
                        },
                        new
                        {
                            Id = new Guid("9ba7c5e4-710f-473f-ac52-f9609601c5b3"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNIY9W5DxVGXTtV4gR1ZU5qipQsRkpK2pZ3Q&s",
                            Name = "Tomato",
                            ParentId = new Guid("777060b8-90ac-4a95-ac86-07bd43814878")
                        },
                        new
                        {
                            Id = new Guid("f6cb6bb2-08e3-475a-8284-4763e1c03169"),
                            ImgUrl = "https://volyne.e-coop.cz/pub/media/catalog/product/cache/5e943ec86580054ec2fda73128d751b9/e/p/ep_2004800329.jpeg",
                            Name = "Tomino",
                            ParentId = new Guid("9ba7c5e4-710f-473f-ac52-f9609601c5b3")
                        },
                        new
                        {
                            Id = new Guid("c3ab45d8-8281-4cb0-a934-6fc3bac1a66a"),
                            ImgUrl = "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSaogrbCqgly8ABLDeqzUKy3Q73FtM_p1XeKseySN5uIjauTVtz",
                            Name = "Roma",
                            ParentId = new Guid("9ba7c5e4-710f-473f-ac52-f9609601c5b3")
                        },
                        new
                        {
                            Id = new Guid("c5c1f602-dc98-4c3b-aec9-1f9f764adc46"),
                            ImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Patates.jpg/1200px-Patates.jpg",
                            Name = "Potato",
                            ParentId = new Guid("777060b8-90ac-4a95-ac86-07bd43814878")
                        },
                        new
                        {
                            Id = new Guid("6ca8c993-360b-4a10-b24c-3123e5d174b0"),
                            ImgUrl = "https://btiscience.org/wp-content/uploads/US-Watermelon-Varieties_600dpi.jpg",
                            Name = "Watermelon",
                            ParentId = new Guid("2e22dd47-bf63-4464-aa0e-1b29798831c5")
                        },
                        new
                        {
                            Id = new Guid("cbb3ea06-aa61-4d87-9864-4442069d5efc"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSp05ca_Cf1CqlqghC5DgeX3PNdU-Kup6h1GQ&s",
                            Name = "Avocado",
                            ParentId = new Guid("2e22dd47-bf63-4464-aa0e-1b29798831c5")
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttribute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ea1d554-d749-43e1-b24f-3941c5050adf"),
                            AttributeId = new Guid("9fd17449-bda7-433b-8005-19c8b597f287"),
                            ProductId = new Guid("d16d4968-3909-4111-9caa-7e2fd04831b9"),
                            Value = "25"
                        },
                        new
                        {
                            Id = new Guid("4b973f21-ecea-4975-8fb8-159d7b2eb454"),
                            AttributeId = new Guid("9fd17449-bda7-433b-8005-19c8b597f287"),
                            ProductId = new Guid("75fddc21-dafd-4166-82c0-46f4bc5fd494"),
                            Value = "35"
                        },
                        new
                        {
                            Id = new Guid("07b39593-7aa9-4f4d-83a2-234f8b24afc6"),
                            AttributeId = new Guid("4ea7c823-b57c-475e-9530-45c8e4032692"),
                            ProductId = new Guid("92692599-876f-471f-815a-e925e3436905"),
                            Value = "100"
                        },
                        new
                        {
                            Id = new Guid("3afdd37a-3eb6-495e-9331-70eb1ceda30f"),
                            AttributeId = new Guid("4ea7c823-b57c-475e-9530-45c8e4032692"),
                            ProductId = new Guid("fc510c4d-4503-4e16-bec0-a90785ec26ac"),
                            Value = "80"
                        },
                        new
                        {
                            Id = new Guid("625a327b-f59b-4f07-af7b-75787cc55292"),
                            AttributeId = new Guid("4be39cfc-4317-4091-961a-cc314d54cecb"),
                            ProductId = new Guid("d16d4968-3909-4111-9caa-7e2fd04831b9"),
                            Value = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("68287ad2-8b51-4b4e-86dc-e5b5ad8747e7"),
                            AttributeId = new Guid("4be39cfc-4317-4091-961a-cc314d54cecb"),
                            ProductId = new Guid("75fddc21-dafd-4166-82c0-46f4bc5fd494"),
                            Value = "Puerto Rico"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fc510c4d-4503-4e16-bec0-a90785ec26ac"),
                            CategoryId = new Guid("c5c1f602-dc98-4c3b-aec9-1f9f764adc46"),
                            ImgUrl = "https://seedlefarms.com/wp-content/uploads/2022/01/Orange-Sweet-Potatoe.jpg",
                            Name = "Orange sweet"
                        },
                        new
                        {
                            Id = new Guid("92692599-876f-471f-815a-e925e3436905"),
                            CategoryId = new Guid("c5c1f602-dc98-4c3b-aec9-1f9f764adc46"),
                            ImgUrl = "https://www.kroger.com/product/images/large/front/0000000004072?banner=harristeeter",
                            Name = "Russet"
                        },
                        new
                        {
                            Id = new Guid("017d850f-81e9-400e-a372-737a393b5091"),
                            CategoryId = new Guid("f6cb6bb2-08e3-475a-8284-4763e1c03169"),
                            Description = "A sweet and smooth tomino, offering a unique balance of sweetness and creaminess.",
                            Name = "Anton's tasty tomino"
                        },
                        new
                        {
                            Id = new Guid("a8f78292-128b-4585-9be1-a8bd8a9edc79"),
                            CategoryId = new Guid("f6cb6bb2-08e3-475a-8284-4763e1c03169"),
                            Description = "A delicious, creamy tomino with a rich, savory flavor. Perfect for any tomato lover!",
                            Name = "Ilya's sweet tomino"
                        },
                        new
                        {
                            Id = new Guid("448ed780-2af5-4831-b761-f09b8f847451"),
                            CategoryId = new Guid("6ca8c993-360b-4a10-b24c-3123e5d174b0"),
                            Name = "Augusta"
                        },
                        new
                        {
                            Id = new Guid("bd4d59cc-135b-44ce-bf15-60aabc4697da"),
                            CategoryId = new Guid("6ca8c993-360b-4a10-b24c-3123e5d174b0"),
                            Name = "Dragon King"
                        },
                        new
                        {
                            Id = new Guid("7d17c51c-bba7-4590-a556-f514e051d86d"),
                            CategoryId = new Guid("6ca8c993-360b-4a10-b24c-3123e5d174b0"),
                            Name = "Happy family"
                        },
                        new
                        {
                            Id = new Guid("d16d4968-3909-4111-9caa-7e2fd04831b9"),
                            CategoryId = new Guid("cbb3ea06-aa61-4d87-9864-4442069d5efc"),
                            Description = "Fuerte avocados are medium to large with smooth, thick skin and a mild, creamy flavor. Perfect for slicing and enjoying in salads, or on toast.",
                            ImgUrl = "https://www.tomorrowsharvest.com/store/pub/media/catalog/product/cache/49e19764d17a195b05fde2ec48914513/2/2/2210_fuerte_avocado_fruit-full.jpg",
                            Name = "Fuerte"
                        },
                        new
                        {
                            Id = new Guid("75fddc21-dafd-4166-82c0-46f4bc5fd494"),
                            CategoryId = new Guid("cbb3ea06-aa61-4d87-9864-4442069d5efc"),
                            Description = "Gwen avocados are a variety known for their creamy texture and rich, nutty flavor. They are slightly smaller than Has avocados and have a smoother texture.",
                            ImgUrl = "https://www.producemarketguide.com/media/user_v1oz1Yz27j/584/gwen-avocado_variety-page.png",
                            Name = "Gwen"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6e28cdf-f7ec-419b-9f81-3df298df81fb"),
                            Email = "admin@admin.com",
                            ImgUrl = "",
                            Name = "admin",
                            Password = "admin",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("cfa864cf-ff9e-47d7-9bdd-41ff87361b43"),
                            Email = "maksim@mail.com",
                            ImgUrl = "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_3x4.jpg",
                            Name = "Maksim",
                            Password = "123",
                            Role = 1,
                            Username = "MaksimDubr"
                        },
                        new
                        {
                            Id = new Guid("7e1cd981-efbc-4dbc-a959-a1bd49845f7b"),
                            Email = "anton@mail.com",
                            ImgUrl = "https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg",
                            Name = "Anton",
                            Password = "123456",
                            Role = 1,
                            Username = "AntonHavl"
                        },
                        new
                        {
                            Id = new Guid("fbbde8e2-3599-475a-8f78-dbd3baa5ead1"),
                            Email = "nastya@mail.com",
                            ImgUrl = "https://cdn.pixabay.com/photo/2021/09/20/09/17/dog-6640280_1280.jpg",
                            Name = "Nastya",
                            Password = "1234",
                            Role = 1,
                            Username = "NastyaMiro"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserOrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOrderEntity");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.AttributeEntity", "Attribute")
                        .WithMany("Products")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserOrderEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Customers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.UserEntity", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
