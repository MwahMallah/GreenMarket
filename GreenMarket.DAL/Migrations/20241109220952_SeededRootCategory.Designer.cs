// <auto-generated />
using System;
using GreenMarket.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenMarket.DAL.Migrations
{
    [DbContext(typeof(GreenMarketDbContext))]
    [Migration("20241109220952_SeededRootCategory")]
    partial class SeededRootCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Attributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("51a0e0c6-e315-46ce-baf5-83105471c3ff"),
                            CategoryId = new Guid("5ea9a8a2-8aa4-4cf5-9231-8d02927be5d6"),
                            Name = "Price/kg"
                        },
                        new
                        {
                            Id = new Guid("395e9bc6-aafd-4f52-bbab-834803408b8b"),
                            CategoryId = new Guid("c01364df-cb79-493d-8f7b-fc6c2d7021f6"),
                            Name = "Price/piece"
                        },
                        new
                        {
                            Id = new Guid("e6695d38-fda3-4b1b-bfd1-7a806785b699"),
                            CategoryId = new Guid("c01364df-cb79-493d-8f7b-fc6c2d7021f6"),
                            Name = "Place of origin"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37190e52-d346-45c2-9802-d69afa0cbaaa"),
                            Name = "Crops"
                        },
                        new
                        {
                            Id = new Guid("56a91102-8ba8-44d3-a50c-494e3b887a87"),
                            ImgUrl = "https://www.healthyeating.org/images/default-source/home-0.0/nutrition-topics-2.0/general-nutrition-wellness/2-2-2-3foodgroups_fruits_detailfeature_thumb.jpg?sfvrsn=7abe71fe_4",
                            Name = "Fruits",
                            ParentId = new Guid("37190e52-d346-45c2-9802-d69afa0cbaaa")
                        },
                        new
                        {
                            Id = new Guid("dce96ee5-acd2-4882-bd74-2c4dcafb08a6"),
                            ImgUrl = "https://cdn.britannica.com/17/196817-159-9E487F15/vegetables.jpg",
                            Name = "Vegetables",
                            ParentId = new Guid("37190e52-d346-45c2-9802-d69afa0cbaaa")
                        },
                        new
                        {
                            Id = new Guid("4be7c950-de0a-4364-814a-06fef0a15394"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNIY9W5DxVGXTtV4gR1ZU5qipQsRkpK2pZ3Q&s",
                            Name = "Tomato",
                            ParentId = new Guid("dce96ee5-acd2-4882-bd74-2c4dcafb08a6")
                        },
                        new
                        {
                            Id = new Guid("0744237a-7314-4ffc-ae56-1d16df46f398"),
                            ImgUrl = "https://volyne.e-coop.cz/pub/media/catalog/product/cache/5e943ec86580054ec2fda73128d751b9/e/p/ep_2004800329.jpeg",
                            Name = "Tomino",
                            ParentId = new Guid("4be7c950-de0a-4364-814a-06fef0a15394")
                        },
                        new
                        {
                            Id = new Guid("66af7baa-6236-49f3-b10f-279a307c42b0"),
                            ImgUrl = "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSaogrbCqgly8ABLDeqzUKy3Q73FtM_p1XeKseySN5uIjauTVtz",
                            Name = "Roma",
                            ParentId = new Guid("4be7c950-de0a-4364-814a-06fef0a15394")
                        },
                        new
                        {
                            Id = new Guid("5ea9a8a2-8aa4-4cf5-9231-8d02927be5d6"),
                            ImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Patates.jpg/1200px-Patates.jpg",
                            Name = "Potato",
                            ParentId = new Guid("dce96ee5-acd2-4882-bd74-2c4dcafb08a6")
                        },
                        new
                        {
                            Id = new Guid("5b1cd1ab-6241-4669-962c-594d37592ea8"),
                            ImgUrl = "https://btiscience.org/wp-content/uploads/US-Watermelon-Varieties_600dpi.jpg",
                            Name = "Watermelon",
                            ParentId = new Guid("56a91102-8ba8-44d3-a50c-494e3b887a87")
                        },
                        new
                        {
                            Id = new Guid("c01364df-cb79-493d-8f7b-fc6c2d7021f6"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSp05ca_Cf1CqlqghC5DgeX3PNdU-Kup6h1GQ&s",
                            Name = "Avocado",
                            ParentId = new Guid("56a91102-8ba8-44d3-a50c-494e3b887a87")
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttribute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9332d5d7-a068-407c-acf0-56069ff02bd2"),
                            AttributeId = new Guid("395e9bc6-aafd-4f52-bbab-834803408b8b"),
                            ProductId = new Guid("380c2e73-ddfb-4e43-8262-18e6897ed6c7"),
                            Value = "25"
                        },
                        new
                        {
                            Id = new Guid("af9b9317-9949-4486-94cf-c46b6c5a1e10"),
                            AttributeId = new Guid("395e9bc6-aafd-4f52-bbab-834803408b8b"),
                            ProductId = new Guid("47016abc-bd18-4cbd-9ae8-6e7b72bc4942"),
                            Value = "35"
                        },
                        new
                        {
                            Id = new Guid("5d22b041-c11a-4899-b86f-ee5e7399559a"),
                            AttributeId = new Guid("51a0e0c6-e315-46ce-baf5-83105471c3ff"),
                            ProductId = new Guid("1b6e7684-fb43-45fd-84de-3592e17f1625"),
                            Value = "100"
                        },
                        new
                        {
                            Id = new Guid("4fe2d0db-6d93-4823-a3a2-482b63af49ad"),
                            AttributeId = new Guid("51a0e0c6-e315-46ce-baf5-83105471c3ff"),
                            ProductId = new Guid("40337c8c-ecd7-4233-b4fb-520633fea4a3"),
                            Value = "80"
                        },
                        new
                        {
                            Id = new Guid("96093249-374f-49b5-a9d7-9ccc507668a6"),
                            AttributeId = new Guid("e6695d38-fda3-4b1b-bfd1-7a806785b699"),
                            ProductId = new Guid("380c2e73-ddfb-4e43-8262-18e6897ed6c7"),
                            Value = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("97ac0668-74f3-41b0-a644-de6bb2a9d671"),
                            AttributeId = new Guid("e6695d38-fda3-4b1b-bfd1-7a806785b699"),
                            ProductId = new Guid("47016abc-bd18-4cbd-9ae8-6e7b72bc4942"),
                            Value = "Puerto Rico"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("40337c8c-ecd7-4233-b4fb-520633fea4a3"),
                            CategoryId = new Guid("5ea9a8a2-8aa4-4cf5-9231-8d02927be5d6"),
                            ImgUrl = "https://seedlefarms.com/wp-content/uploads/2022/01/Orange-Sweet-Potatoe.jpg",
                            Name = "Orange sweet"
                        },
                        new
                        {
                            Id = new Guid("1b6e7684-fb43-45fd-84de-3592e17f1625"),
                            CategoryId = new Guid("5ea9a8a2-8aa4-4cf5-9231-8d02927be5d6"),
                            ImgUrl = "https://www.kroger.com/product/images/large/front/0000000004072?banner=harristeeter",
                            Name = "Russet"
                        },
                        new
                        {
                            Id = new Guid("d0eec32c-5a64-4e1d-b3c8-92020680a3fa"),
                            CategoryId = new Guid("0744237a-7314-4ffc-ae56-1d16df46f398"),
                            Name = "Anton's tasty tomino"
                        },
                        new
                        {
                            Id = new Guid("bbd31df9-3e72-4e13-baed-22bcfa40e516"),
                            CategoryId = new Guid("0744237a-7314-4ffc-ae56-1d16df46f398"),
                            Name = "Ilya's sweet tomino"
                        },
                        new
                        {
                            Id = new Guid("43f4b207-44da-4ad9-9280-5841cad94502"),
                            CategoryId = new Guid("5b1cd1ab-6241-4669-962c-594d37592ea8"),
                            Name = "Augusta"
                        },
                        new
                        {
                            Id = new Guid("9bbbb864-f0cb-42ca-9f82-82f6d2cf144b"),
                            CategoryId = new Guid("5b1cd1ab-6241-4669-962c-594d37592ea8"),
                            Name = "Dragon King"
                        },
                        new
                        {
                            Id = new Guid("b7fedb18-c5d0-417a-83c3-f1a6a3b21fc0"),
                            CategoryId = new Guid("5b1cd1ab-6241-4669-962c-594d37592ea8"),
                            Name = "Happy family"
                        },
                        new
                        {
                            Id = new Guid("380c2e73-ddfb-4e43-8262-18e6897ed6c7"),
                            CategoryId = new Guid("c01364df-cb79-493d-8f7b-fc6c2d7021f6"),
                            ImgUrl = "https://www.tomorrowsharvest.com/store/pub/media/catalog/product/cache/49e19764d17a195b05fde2ec48914513/2/2/2210_fuerte_avocado_fruit-full.jpg",
                            Name = "Fuerte"
                        },
                        new
                        {
                            Id = new Guid("47016abc-bd18-4cbd-9ae8-6e7b72bc4942"),
                            CategoryId = new Guid("c01364df-cb79-493d-8f7b-fc6c2d7021f6"),
                            ImgUrl = "https://www.producemarketguide.com/media/user_v1oz1Yz27j/584/gwen-avocado_variety-page.png",
                            Name = "Gwen"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e414630-2228-4faf-a11b-fc75fd2a344d"),
                            ImgUrl = "",
                            Name = "admin",
                            Password = "admin",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("7e86d34d-c7c8-4665-b816-b4878aa2c352"),
                            ImgUrl = "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_3x4.jpg",
                            Name = "Maksim",
                            Password = "123",
                            Role = 1,
                            Username = "MaksimDubr"
                        },
                        new
                        {
                            Id = new Guid("d073c88d-d465-4bb8-8a34-29167c61849d"),
                            ImgUrl = "https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg",
                            Name = "Anton",
                            Password = "123456",
                            Role = 1,
                            Username = "AntonHavl"
                        },
                        new
                        {
                            Id = new Guid("a60820ba-4626-4e9c-9f17-f69f8bb371c0"),
                            ImgUrl = "https://cdn.pixabay.com/photo/2021/09/20/09/17/dog-6640280_1280.jpg",
                            Name = "Nastya",
                            Password = "1234",
                            Role = 1,
                            Username = "NastyaMiro"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.AttributeEntity", "Attribute")
                        .WithMany("Products")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Navigation("Attributes");
                });
#pragma warning restore 612, 618
        }
    }
}
