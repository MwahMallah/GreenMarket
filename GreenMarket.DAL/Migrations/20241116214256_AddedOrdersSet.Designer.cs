// <auto-generated />
using System;
using GreenMarket.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenMarket.DAL.Migrations
{
    [DbContext(typeof(GreenMarketDbContext))]
    [Migration("20241116214256_AddedOrdersSet")]
    partial class AddedOrdersSet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Attributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99578528-26ce-4530-b7ec-e6c60656727c"),
                            CategoryId = new Guid("6d014c14-d00e-45a4-8766-7c20a96aa3a1"),
                            Name = "Price/kg"
                        },
                        new
                        {
                            Id = new Guid("78cc6698-463c-4a3b-9316-ec36075b70ed"),
                            CategoryId = new Guid("5c02fbf0-8ab3-4b79-a2a9-f18d4c73b173"),
                            Name = "Price/piece"
                        },
                        new
                        {
                            Id = new Guid("f10580c3-148d-47ae-8576-6cde4a7e7f0f"),
                            CategoryId = new Guid("5c02fbf0-8ab3-4b79-a2a9-f18d4c73b173"),
                            Name = "Place of origin"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c40a2a3-4350-4457-b456-ecc646f3e088"),
                            Name = "Crops"
                        },
                        new
                        {
                            Id = new Guid("77822156-6714-4693-ad6c-7bbbde21f358"),
                            ImgUrl = "https://www.healthyeating.org/images/default-source/home-0.0/nutrition-topics-2.0/general-nutrition-wellness/2-2-2-3foodgroups_fruits_detailfeature_thumb.jpg?sfvrsn=7abe71fe_4",
                            Name = "Fruits",
                            ParentId = new Guid("8c40a2a3-4350-4457-b456-ecc646f3e088")
                        },
                        new
                        {
                            Id = new Guid("dbe28711-64d4-4872-8184-d85c3fd785ab"),
                            ImgUrl = "https://cdn.britannica.com/17/196817-159-9E487F15/vegetables.jpg",
                            Name = "Vegetables",
                            ParentId = new Guid("8c40a2a3-4350-4457-b456-ecc646f3e088")
                        },
                        new
                        {
                            Id = new Guid("6d38e761-7116-492e-8ce2-6669261db1ba"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNIY9W5DxVGXTtV4gR1ZU5qipQsRkpK2pZ3Q&s",
                            Name = "Tomato",
                            ParentId = new Guid("dbe28711-64d4-4872-8184-d85c3fd785ab")
                        },
                        new
                        {
                            Id = new Guid("7cba2f77-146a-48f5-94ac-2fc0c2a71347"),
                            ImgUrl = "https://volyne.e-coop.cz/pub/media/catalog/product/cache/5e943ec86580054ec2fda73128d751b9/e/p/ep_2004800329.jpeg",
                            Name = "Tomino",
                            ParentId = new Guid("6d38e761-7116-492e-8ce2-6669261db1ba")
                        },
                        new
                        {
                            Id = new Guid("cf61cc95-7ea2-49cc-a218-f4da921cef40"),
                            ImgUrl = "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSaogrbCqgly8ABLDeqzUKy3Q73FtM_p1XeKseySN5uIjauTVtz",
                            Name = "Roma",
                            ParentId = new Guid("6d38e761-7116-492e-8ce2-6669261db1ba")
                        },
                        new
                        {
                            Id = new Guid("6d014c14-d00e-45a4-8766-7c20a96aa3a1"),
                            ImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Patates.jpg/1200px-Patates.jpg",
                            Name = "Potato",
                            ParentId = new Guid("dbe28711-64d4-4872-8184-d85c3fd785ab")
                        },
                        new
                        {
                            Id = new Guid("eaad7e5f-8885-4ba1-b14a-629f89d1fafc"),
                            ImgUrl = "https://btiscience.org/wp-content/uploads/US-Watermelon-Varieties_600dpi.jpg",
                            Name = "Watermelon",
                            ParentId = new Guid("77822156-6714-4693-ad6c-7bbbde21f358")
                        },
                        new
                        {
                            Id = new Guid("5c02fbf0-8ab3-4b79-a2a9-f18d4c73b173"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSp05ca_Cf1CqlqghC5DgeX3PNdU-Kup6h1GQ&s",
                            Name = "Avocado",
                            ParentId = new Guid("77822156-6714-4693-ad6c-7bbbde21f358")
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttribute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b1608b4-ecc2-4aaa-a3fb-983b047a11e6"),
                            AttributeId = new Guid("78cc6698-463c-4a3b-9316-ec36075b70ed"),
                            ProductId = new Guid("f358465c-45d4-4aa2-86cb-2e963834dd51"),
                            Value = "25"
                        },
                        new
                        {
                            Id = new Guid("8836ab46-531b-4be2-adad-13dcc966b805"),
                            AttributeId = new Guid("78cc6698-463c-4a3b-9316-ec36075b70ed"),
                            ProductId = new Guid("408879eb-f5dc-4b6f-b674-3e725e7092cb"),
                            Value = "35"
                        },
                        new
                        {
                            Id = new Guid("ebcff83d-ec54-45e1-b570-103e7c507173"),
                            AttributeId = new Guid("99578528-26ce-4530-b7ec-e6c60656727c"),
                            ProductId = new Guid("3f74ba99-b47c-43aa-a4d2-94c674c6831c"),
                            Value = "100"
                        },
                        new
                        {
                            Id = new Guid("3809c392-c3bb-4709-b4d8-e864c857e106"),
                            AttributeId = new Guid("99578528-26ce-4530-b7ec-e6c60656727c"),
                            ProductId = new Guid("248db32c-0e1e-4734-af69-e2b1df37e4b3"),
                            Value = "80"
                        },
                        new
                        {
                            Id = new Guid("3853b9d6-378c-4fcc-b715-4eecdc3439c4"),
                            AttributeId = new Guid("f10580c3-148d-47ae-8576-6cde4a7e7f0f"),
                            ProductId = new Guid("f358465c-45d4-4aa2-86cb-2e963834dd51"),
                            Value = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("973d83f1-3b14-48cf-a479-2f1d716e6010"),
                            AttributeId = new Guid("f10580c3-148d-47ae-8576-6cde4a7e7f0f"),
                            ProductId = new Guid("408879eb-f5dc-4b6f-b674-3e725e7092cb"),
                            Value = "Puerto Rico"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("248db32c-0e1e-4734-af69-e2b1df37e4b3"),
                            CategoryId = new Guid("6d014c14-d00e-45a4-8766-7c20a96aa3a1"),
                            CreatorId = new Guid("d0a3d8cc-97d0-487d-abfe-abeeb95a638b"),
                            ImgUrl = "https://seedlefarms.com/wp-content/uploads/2022/01/Orange-Sweet-Potatoe.jpg",
                            Name = "Orange sweet"
                        },
                        new
                        {
                            Id = new Guid("3f74ba99-b47c-43aa-a4d2-94c674c6831c"),
                            CategoryId = new Guid("6d014c14-d00e-45a4-8766-7c20a96aa3a1"),
                            CreatorId = new Guid("d0a3d8cc-97d0-487d-abfe-abeeb95a638b"),
                            ImgUrl = "https://www.kroger.com/product/images/large/front/0000000004072?banner=harristeeter",
                            Name = "Russet"
                        },
                        new
                        {
                            Id = new Guid("fee7357c-e472-4198-bdf6-7e066bc31e9d"),
                            CategoryId = new Guid("7cba2f77-146a-48f5-94ac-2fc0c2a71347"),
                            CreatorId = new Guid("4f26fc25-0ea0-4067-af5d-38e2b31b8014"),
                            Description = "A sweet and smooth tomino, offering a unique balance of sweetness and creaminess.",
                            Name = "Anton's tasty tomino"
                        },
                        new
                        {
                            Id = new Guid("8d3ceb9e-b2ca-43a4-b915-270f5cf625ae"),
                            CategoryId = new Guid("7cba2f77-146a-48f5-94ac-2fc0c2a71347"),
                            CreatorId = new Guid("c09b09bb-a0ce-4a46-a9cd-08a3e1589fc5"),
                            Description = "A delicious, creamy tomino with a rich, savory flavor. Perfect for any tomato lover!",
                            Name = "Ilya's sweet tomino"
                        },
                        new
                        {
                            Id = new Guid("2891d612-9725-4bbe-a9da-920ccda81d13"),
                            CategoryId = new Guid("eaad7e5f-8885-4ba1-b14a-629f89d1fafc"),
                            CreatorId = new Guid("4f26fc25-0ea0-4067-af5d-38e2b31b8014"),
                            Name = "Augusta"
                        },
                        new
                        {
                            Id = new Guid("a71a4e12-5b8f-43d2-bbf9-2d8e79b0ee31"),
                            CategoryId = new Guid("eaad7e5f-8885-4ba1-b14a-629f89d1fafc"),
                            CreatorId = new Guid("4f26fc25-0ea0-4067-af5d-38e2b31b8014"),
                            Name = "Dragon King"
                        },
                        new
                        {
                            Id = new Guid("b1714ebc-7d16-4f9c-9c97-f5e9ef612813"),
                            CategoryId = new Guid("eaad7e5f-8885-4ba1-b14a-629f89d1fafc"),
                            CreatorId = new Guid("4f26fc25-0ea0-4067-af5d-38e2b31b8014"),
                            Name = "Happy family"
                        },
                        new
                        {
                            Id = new Guid("f358465c-45d4-4aa2-86cb-2e963834dd51"),
                            CategoryId = new Guid("5c02fbf0-8ab3-4b79-a2a9-f18d4c73b173"),
                            CreatorId = new Guid("d0a3d8cc-97d0-487d-abfe-abeeb95a638b"),
                            Description = "Fuerte avocados are medium to large with smooth, thick skin and a mild, creamy flavor. Perfect for slicing and enjoying in salads, or on toast.",
                            ImgUrl = "https://www.tomorrowsharvest.com/store/pub/media/catalog/product/cache/49e19764d17a195b05fde2ec48914513/2/2/2210_fuerte_avocado_fruit-full.jpg",
                            Name = "Fuerte"
                        },
                        new
                        {
                            Id = new Guid("408879eb-f5dc-4b6f-b674-3e725e7092cb"),
                            CategoryId = new Guid("5c02fbf0-8ab3-4b79-a2a9-f18d4c73b173"),
                            CreatorId = new Guid("97272cb4-5292-48bd-b202-7987b4f76005"),
                            Description = "Gwen avocados are a variety known for their creamy texture and rich, nutty flavor. They are slightly smaller than Has avocados and have a smoother texture.",
                            ImgUrl = "https://www.producemarketguide.com/media/user_v1oz1Yz27j/584/gwen-avocado_variety-page.png",
                            Name = "Gwen"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8ab32d0-fcc4-4f08-9965-ef85957c2923"),
                            Email = "admin@admin.com",
                            ImgUrl = "",
                            Name = "admin",
                            Password = "admin",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("d0a3d8cc-97d0-487d-abfe-abeeb95a638b"),
                            Email = "maksim@mail.com",
                            ImgUrl = "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_3x4.jpg",
                            Name = "Maksim",
                            Password = "123",
                            Role = 1,
                            Username = "MaksimDubr"
                        },
                        new
                        {
                            Id = new Guid("4f26fc25-0ea0-4067-af5d-38e2b31b8014"),
                            Email = "anton@mail.com",
                            ImgUrl = "https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg",
                            Name = "Anton",
                            Password = "123456",
                            Role = 1,
                            Username = "AntonHavl"
                        },
                        new
                        {
                            Id = new Guid("97272cb4-5292-48bd-b202-7987b4f76005"),
                            Email = "nastya@mail.com",
                            ImgUrl = "https://cdn.pixabay.com/photo/2021/09/20/09/17/dog-6640280_1280.jpg",
                            Name = "Nastya",
                            Password = "1234",
                            Role = 1,
                            Username = "NastyaMiro"
                        },
                        new
                        {
                            Id = new Guid("c09b09bb-a0ce-4a46-a9cd-08a3e1589fc5"),
                            Email = "ilya@mail.com",
                            ImgUrl = "https://cdn.pixabay.com/photo/2021/09/20/09/17/dog-6640280_1280.jpg",
                            Name = "Ilya",
                            Password = "123456",
                            Role = 1,
                            Username = "IlyaVeryBad"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserOrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.AttributeEntity", "Attribute")
                        .WithMany("Products")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.UserEntity", "Creator")
                        .WithMany("CreatedProducts")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserOrderEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.UserEntity", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Navigation("CreatedProducts");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
