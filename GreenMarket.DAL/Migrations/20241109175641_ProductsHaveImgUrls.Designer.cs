// <auto-generated />
using System;
using GreenMarket.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenMarket.DAL.Migrations
{
    [DbContext(typeof(GreenMarketDbContext))]
    [Migration("20241109175641_ProductsHaveImgUrls")]
    partial class ProductsHaveImgUrls
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Attributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("45649f5b-e0e2-4606-a335-a6855c8b1218"),
                            CategoryId = new Guid("bacc0e30-31d8-4567-adfb-5346f21e507f"),
                            Name = "Price/kg"
                        },
                        new
                        {
                            Id = new Guid("8e7cb442-a5f3-46d4-b59f-6f3568a63a98"),
                            CategoryId = new Guid("d139c55f-f6f1-4bc6-ad49-acc0e40ef2aa"),
                            Name = "Price/piece"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32d53241-d232-4c56-9910-267f106a4c66"),
                            ImgUrl = "https://www.healthyeating.org/images/default-source/home-0.0/nutrition-topics-2.0/general-nutrition-wellness/2-2-2-3foodgroups_fruits_detailfeature_thumb.jpg?sfvrsn=7abe71fe_4",
                            Name = "Fruits"
                        },
                        new
                        {
                            Id = new Guid("6b67b76c-1cd7-4f4c-bd4d-c658bbb1d8d8"),
                            ImgUrl = "https://cdn.britannica.com/17/196817-159-9E487F15/vegetables.jpg",
                            Name = "Vegetables"
                        },
                        new
                        {
                            Id = new Guid("cdd3cc74-7c12-4c6b-bf98-2d35df758695"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNIY9W5DxVGXTtV4gR1ZU5qipQsRkpK2pZ3Q&s",
                            Name = "Tomato",
                            ParentId = new Guid("6b67b76c-1cd7-4f4c-bd4d-c658bbb1d8d8")
                        },
                        new
                        {
                            Id = new Guid("bacc0e30-31d8-4567-adfb-5346f21e507f"),
                            ImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Patates.jpg/1200px-Patates.jpg",
                            Name = "Potato",
                            ParentId = new Guid("6b67b76c-1cd7-4f4c-bd4d-c658bbb1d8d8")
                        },
                        new
                        {
                            Id = new Guid("30f24293-1a0c-422c-bb27-fb001bd508e4"),
                            ImgUrl = "https://btiscience.org/wp-content/uploads/US-Watermelon-Varieties_600dpi.jpg",
                            Name = "Watermelon",
                            ParentId = new Guid("32d53241-d232-4c56-9910-267f106a4c66")
                        },
                        new
                        {
                            Id = new Guid("d139c55f-f6f1-4bc6-ad49-acc0e40ef2aa"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSp05ca_Cf1CqlqghC5DgeX3PNdU-Kup6h1GQ&s",
                            Name = "Avocado",
                            ParentId = new Guid("32d53241-d232-4c56-9910-267f106a4c66")
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttribute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12729583-67c1-4a9f-8cbe-5ba16f06a11d"),
                            AttributeId = new Guid("8e7cb442-a5f3-46d4-b59f-6f3568a63a98"),
                            ProductId = new Guid("849aab23-8c3b-40ab-814d-657091d5416d"),
                            Value = "25"
                        },
                        new
                        {
                            Id = new Guid("2713060b-0807-462b-978b-c3d3653800db"),
                            AttributeId = new Guid("8e7cb442-a5f3-46d4-b59f-6f3568a63a98"),
                            ProductId = new Guid("0f183fe6-03c3-42ec-8d9c-081498ae9519"),
                            Value = "35"
                        },
                        new
                        {
                            Id = new Guid("3732c5a9-b2f2-4e18-828b-94725aae9093"),
                            AttributeId = new Guid("45649f5b-e0e2-4606-a335-a6855c8b1218"),
                            ProductId = new Guid("f1e89f98-9745-4696-bf16-638bd9abdab3"),
                            Value = "100"
                        },
                        new
                        {
                            Id = new Guid("0ceef933-0458-470f-bc74-62da64fffadd"),
                            AttributeId = new Guid("45649f5b-e0e2-4606-a335-a6855c8b1218"),
                            ProductId = new Guid("3c2ebf20-8857-4818-bc56-2f14e18c2ec5"),
                            Value = "80"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c2ebf20-8857-4818-bc56-2f14e18c2ec5"),
                            CategoryId = new Guid("bacc0e30-31d8-4567-adfb-5346f21e507f"),
                            ImgUrl = "https://seedlefarms.com/wp-content/uploads/2022/01/Orange-Sweet-Potatoe.jpg",
                            Name = "Orange sweet"
                        },
                        new
                        {
                            Id = new Guid("f1e89f98-9745-4696-bf16-638bd9abdab3"),
                            CategoryId = new Guid("bacc0e30-31d8-4567-adfb-5346f21e507f"),
                            ImgUrl = "https://www.kroger.com/product/images/large/front/0000000004072?banner=harristeeter",
                            Name = "Russet"
                        },
                        new
                        {
                            Id = new Guid("4d10ee4e-4d3b-419b-a3c1-25a35121cb79"),
                            CategoryId = new Guid("cdd3cc74-7c12-4c6b-bf98-2d35df758695"),
                            Name = "Tomino"
                        },
                        new
                        {
                            Id = new Guid("de29f3ea-83c9-4b21-b431-434a7fb7d4bd"),
                            CategoryId = new Guid("cdd3cc74-7c12-4c6b-bf98-2d35df758695"),
                            Name = "Roma"
                        },
                        new
                        {
                            Id = new Guid("1240e823-8ee0-4809-9a10-64a723bdc8f5"),
                            CategoryId = new Guid("30f24293-1a0c-422c-bb27-fb001bd508e4"),
                            Name = "Augusta"
                        },
                        new
                        {
                            Id = new Guid("dd81bc78-6b33-4a23-91ce-1e5fd46e0a04"),
                            CategoryId = new Guid("30f24293-1a0c-422c-bb27-fb001bd508e4"),
                            Name = "Dragon King"
                        },
                        new
                        {
                            Id = new Guid("9a720a29-b722-4cd6-9d69-aa47571b7d82"),
                            CategoryId = new Guid("30f24293-1a0c-422c-bb27-fb001bd508e4"),
                            Name = "Happy family"
                        },
                        new
                        {
                            Id = new Guid("849aab23-8c3b-40ab-814d-657091d5416d"),
                            CategoryId = new Guid("d139c55f-f6f1-4bc6-ad49-acc0e40ef2aa"),
                            ImgUrl = "https://www.tomorrowsharvest.com/store/pub/media/catalog/product/cache/49e19764d17a195b05fde2ec48914513/2/2/2210_fuerte_avocado_fruit-full.jpg",
                            Name = "Fuerte"
                        },
                        new
                        {
                            Id = new Guid("0f183fe6-03c3-42ec-8d9c-081498ae9519"),
                            CategoryId = new Guid("d139c55f-f6f1-4bc6-ad49-acc0e40ef2aa"),
                            ImgUrl = "https://www.producemarketguide.com/media/user_v1oz1Yz27j/584/gwen-avocado_variety-page.png",
                            Name = "Gwen"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7a8b30a-a1a9-4acf-ab92-f9b225a8bb72"),
                            ImgUrl = "",
                            Name = "admin",
                            Password = "admin",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("27bcec7d-6261-4568-8bbf-09b815aad2e3"),
                            ImgUrl = "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_3x4.jpg",
                            Name = "Maksim",
                            Password = "123",
                            Role = 1,
                            Username = "MaksimDubr"
                        },
                        new
                        {
                            Id = new Guid("bae1c300-271f-44ae-87a0-4743d9a345bd"),
                            ImgUrl = "https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg",
                            Name = "Anton",
                            Password = "123456",
                            Role = 1,
                            Username = "AntonHavl"
                        },
                        new
                        {
                            Id = new Guid("a93a480c-a50e-4ad8-9b79-5884aba4f9bf"),
                            ImgUrl = "https://cdn.pixabay.com/photo/2021/09/20/09/17/dog-6640280_1280.jpg",
                            Name = "Nastya",
                            Password = "1234",
                            Role = 1,
                            Username = "NastyaMiro"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.AttributeEntity", "Attribute")
                        .WithMany("Products")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Navigation("Attributes");
                });
#pragma warning restore 612, 618
        }
    }
}
