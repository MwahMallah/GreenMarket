// <auto-generated />
using System;
using GreenMarket.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenMarket.DAL.Migrations
{
    [DbContext(typeof(GreenMarketDbContext))]
    [Migration("20241123211000_AttributesMightBeRequired")]
    partial class AttributesMightBeRequired
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Attributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("57d051f6-1ef7-4913-914d-5482b9b79d00"),
                            CategoryId = new Guid("fbf485af-580c-44f0-bf11-fdfc8e96fd4b"),
                            IsRequired = false,
                            Name = "Price/kg"
                        },
                        new
                        {
                            Id = new Guid("a023a0ee-0f5a-48ca-b8d4-f4c794e70ef6"),
                            CategoryId = new Guid("d6cf4c3e-3fef-4fe7-a296-2f101a7a14b8"),
                            IsRequired = false,
                            Name = "Price/piece"
                        },
                        new
                        {
                            Id = new Guid("83869cb1-e2f1-4414-9ae8-c8e452864777"),
                            CategoryId = new Guid("d6cf4c3e-3fef-4fe7-a296-2f101a7a14b8"),
                            IsRequired = false,
                            Name = "Place of origin"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbc7e8fa-fd75-43e7-8368-75275aeb0fbf"),
                            Name = "Crops",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2568ec40-635f-4177-9ea3-a545a0694dc8"),
                            ImgUrl = "https://www.healthyeating.org/images/default-source/home-0.0/nutrition-topics-2.0/general-nutrition-wellness/2-2-2-3foodgroups_fruits_detailfeature_thumb.jpg?sfvrsn=7abe71fe_4",
                            Name = "Fruits",
                            ParentId = new Guid("bbc7e8fa-fd75-43e7-8368-75275aeb0fbf"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("c1ebe657-6142-45d6-a6c0-6c1e8d8d74ef"),
                            ImgUrl = "https://cdn.britannica.com/17/196817-159-9E487F15/vegetables.jpg",
                            Name = "Vegetables",
                            ParentId = new Guid("bbc7e8fa-fd75-43e7-8368-75275aeb0fbf"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("84a91178-0b63-45b6-8dc6-43d763103ae5"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNIY9W5DxVGXTtV4gR1ZU5qipQsRkpK2pZ3Q&s",
                            Name = "Tomato",
                            ParentId = new Guid("c1ebe657-6142-45d6-a6c0-6c1e8d8d74ef"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("aac9f1ec-8960-4e7a-8b99-f7787dc78058"),
                            ImgUrl = "https://volyne.e-coop.cz/pub/media/catalog/product/cache/5e943ec86580054ec2fda73128d751b9/e/p/ep_2004800329.jpeg",
                            Name = "Tomino",
                            ParentId = new Guid("84a91178-0b63-45b6-8dc6-43d763103ae5"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d4afea69-f402-40ca-bc67-7d48a78f866c"),
                            ImgUrl = "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSaogrbCqgly8ABLDeqzUKy3Q73FtM_p1XeKseySN5uIjauTVtz",
                            Name = "Roma",
                            ParentId = new Guid("84a91178-0b63-45b6-8dc6-43d763103ae5"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("fbf485af-580c-44f0-bf11-fdfc8e96fd4b"),
                            ImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Patates.jpg/1200px-Patates.jpg",
                            Name = "Potato",
                            ParentId = new Guid("c1ebe657-6142-45d6-a6c0-6c1e8d8d74ef"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("4c759a41-5825-46df-8add-ed560dfed63d"),
                            ImgUrl = "https://btiscience.org/wp-content/uploads/US-Watermelon-Varieties_600dpi.jpg",
                            Name = "Watermelon",
                            ParentId = new Guid("2568ec40-635f-4177-9ea3-a545a0694dc8"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d6cf4c3e-3fef-4fe7-a296-2f101a7a14b8"),
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSp05ca_Cf1CqlqghC5DgeX3PNdU-Kup6h1GQ&s",
                            Name = "Avocado",
                            ParentId = new Guid("2568ec40-635f-4177-9ea3-a545a0694dc8"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.HarvestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Harvests");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.OrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttribute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a006f3d-45ad-4b1e-bbea-98b09fba0795"),
                            AttributeId = new Guid("a023a0ee-0f5a-48ca-b8d4-f4c794e70ef6"),
                            ProductId = new Guid("9478d6fa-0a96-4c15-bf3c-a5a1651311bd"),
                            Value = "25"
                        },
                        new
                        {
                            Id = new Guid("2b08d228-2ad8-4d02-be12-3363a5cf592d"),
                            AttributeId = new Guid("a023a0ee-0f5a-48ca-b8d4-f4c794e70ef6"),
                            ProductId = new Guid("3ddcf5ab-c095-42fa-b2dc-c818bbb9c30d"),
                            Value = "35"
                        },
                        new
                        {
                            Id = new Guid("887a711c-53e1-4691-a7c5-5d9dafb18006"),
                            AttributeId = new Guid("57d051f6-1ef7-4913-914d-5482b9b79d00"),
                            ProductId = new Guid("02c3db96-0eb0-43ad-b4d5-51b20b041bad"),
                            Value = "100"
                        },
                        new
                        {
                            Id = new Guid("1646a4f6-ca7d-42fe-93ce-ecd955a3febc"),
                            AttributeId = new Guid("57d051f6-1ef7-4913-914d-5482b9b79d00"),
                            ProductId = new Guid("88d865df-20d0-4d8a-a965-6db17abc96bd"),
                            Value = "80"
                        },
                        new
                        {
                            Id = new Guid("3b86c80c-0b06-40c7-af39-219d953af86f"),
                            AttributeId = new Guid("83869cb1-e2f1-4414-9ae8-c8e452864777"),
                            ProductId = new Guid("9478d6fa-0a96-4c15-bf3c-a5a1651311bd"),
                            Value = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("c05ef69c-f635-42f6-bbd8-e3936f1315fc"),
                            AttributeId = new Guid("83869cb1-e2f1-4414-9ae8-c8e452864777"),
                            ProductId = new Guid("3ddcf5ab-c095-42fa-b2dc-c818bbb9c30d"),
                            Value = "Puerto Rico"
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("88d865df-20d0-4d8a-a965-6db17abc96bd"),
                            CategoryId = new Guid("fbf485af-580c-44f0-bf11-fdfc8e96fd4b"),
                            CreatorId = new Guid("ac9f0bbc-5866-4b03-b2cd-266423ca0924"),
                            ImgUrl = "https://seedlefarms.com/wp-content/uploads/2022/01/Orange-Sweet-Potatoe.jpg",
                            Name = "Orange sweet",
                            Stock = 3,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("02c3db96-0eb0-43ad-b4d5-51b20b041bad"),
                            CategoryId = new Guid("fbf485af-580c-44f0-bf11-fdfc8e96fd4b"),
                            CreatorId = new Guid("ac9f0bbc-5866-4b03-b2cd-266423ca0924"),
                            ImgUrl = "https://www.kroger.com/product/images/large/front/0000000004072?banner=harristeeter",
                            Name = "Russet",
                            Stock = 4,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("9b9a27a2-4d2b-485f-a710-353f64171891"),
                            CategoryId = new Guid("aac9f1ec-8960-4e7a-8b99-f7787dc78058"),
                            CreatorId = new Guid("bd9aa7a3-e5a0-4546-a629-912fa21fad9c"),
                            Description = "A sweet and smooth tomino, offering a unique balance of sweetness and creaminess.",
                            Name = "Anton's tasty tomino",
                            Stock = 5,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("3d17c780-6059-4156-ae24-256a863decbd"),
                            CategoryId = new Guid("aac9f1ec-8960-4e7a-8b99-f7787dc78058"),
                            CreatorId = new Guid("35482da9-c651-4a7d-8e59-bcac4b324486"),
                            Description = "A delicious, creamy tomino with a rich, savory flavor. Perfect for any tomato lover!",
                            Name = "Ilya's sweet tomino",
                            Stock = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("06b6592a-1214-460c-8556-8902dd44b4df"),
                            CategoryId = new Guid("4c759a41-5825-46df-8add-ed560dfed63d"),
                            CreatorId = new Guid("bd9aa7a3-e5a0-4546-a629-912fa21fad9c"),
                            Name = "Augusta",
                            Stock = 2,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("6479d51d-4fee-44e8-83f4-c8bb17efb8da"),
                            CategoryId = new Guid("4c759a41-5825-46df-8add-ed560dfed63d"),
                            CreatorId = new Guid("bd9aa7a3-e5a0-4546-a629-912fa21fad9c"),
                            Name = "Dragon King",
                            Stock = 3,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("1cedff0d-f76f-45d9-bf8e-636028c21dc5"),
                            CategoryId = new Guid("4c759a41-5825-46df-8add-ed560dfed63d"),
                            CreatorId = new Guid("bd9aa7a3-e5a0-4546-a629-912fa21fad9c"),
                            Name = "Happy family",
                            Stock = 10,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("9478d6fa-0a96-4c15-bf3c-a5a1651311bd"),
                            CategoryId = new Guid("d6cf4c3e-3fef-4fe7-a296-2f101a7a14b8"),
                            CreatorId = new Guid("ac9f0bbc-5866-4b03-b2cd-266423ca0924"),
                            Description = "Fuerte avocados are medium to large with smooth, thick skin and a mild, creamy flavor. Perfect for slicing and enjoying in salads, or on toast.",
                            ImgUrl = "https://www.tomorrowsharvest.com/store/pub/media/catalog/product/cache/49e19764d17a195b05fde2ec48914513/2/2/2210_fuerte_avocado_fruit-full.jpg",
                            Name = "Fuerte",
                            Stock = 11,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("3ddcf5ab-c095-42fa-b2dc-c818bbb9c30d"),
                            CategoryId = new Guid("d6cf4c3e-3fef-4fe7-a296-2f101a7a14b8"),
                            CreatorId = new Guid("03eee7bf-1484-4a03-bc0d-e4d8adad3347"),
                            Description = "Gwen avocados are a variety known for their creamy texture and rich, nutty flavor. They are slightly smaller than Has avocados and have a smoother texture.",
                            ImgUrl = "https://www.producemarketguide.com/media/user_v1oz1Yz27j/584/gwen-avocado_variety-page.png",
                            Name = "Gwen",
                            Stock = 5,
                            Type = 0
                        });
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6da400c4-d733-454f-ba1c-98d63fe6d49c"),
                            Email = "admin@admin.com",
                            ImgUrl = "",
                            Name = "admin",
                            Password = "admin",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("ac9f0bbc-5866-4b03-b2cd-266423ca0924"),
                            Email = "maksim@mail.com",
                            ImgUrl = "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_3x4.jpg",
                            Name = "Maksim",
                            Password = "123",
                            Role = 1,
                            Username = "MaksimDubr"
                        },
                        new
                        {
                            Id = new Guid("bd9aa7a3-e5a0-4546-a629-912fa21fad9c"),
                            Email = "anton@mail.com",
                            ImgUrl = "https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg",
                            Name = "Anton",
                            Password = "123456",
                            Role = 1,
                            Username = "AntonHavl"
                        },
                        new
                        {
                            Id = new Guid("03eee7bf-1484-4a03-bc0d-e4d8adad3347"),
                            Email = "nastya@mail.com",
                            ImgUrl = "https://cdn.pixabay.com/photo/2021/09/20/09/17/dog-6640280_1280.jpg",
                            Name = "Nastya",
                            Password = "1234",
                            Role = 1,
                            Username = "NastyaMiro"
                        },
                        new
                        {
                            Id = new Guid("35482da9-c651-4a7d-8e59-bcac4b324486"),
                            Email = "ilya@mail.com",
                            ImgUrl = "https://cdn.pixabay.com/photo/2021/09/20/09/17/dog-6640280_1280.jpg",
                            Name = "Ilya",
                            Password = "123456",
                            Role = 1,
                            Username = "IlyaVeryBad"
                        });
                });

            modelBuilder.Entity("UserHarvest", b =>
                {
                    b.Property<Guid>("HarvestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HarvestId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHarvest");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.HarvestEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Harvests")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.OrderEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.UserEntity", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductAttributeEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.AttributeEntity", "Attribute")
                        .WithMany("Products")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.ProductEntity", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.UserEntity", "Creator")
                        .WithMany("CreatedProducts")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("UserHarvest", b =>
                {
                    b.HasOne("GreenMarket.DAL.Entities.HarvestEntity", "Harvest")
                        .WithMany()
                        .HasForeignKey("HarvestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GreenMarket.DAL.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Harvest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.AttributeEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.ProductEntity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Harvests");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("GreenMarket.DAL.Entities.UserEntity", b =>
                {
                    b.Navigation("CreatedProducts");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
